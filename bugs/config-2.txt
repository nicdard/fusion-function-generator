; Generated with: https://github.com/nicdard/fusion-function-generator
; 100 functions (number of #begin ... #end blocks)
; 25 operators per function

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(assert (= z (not (xor c7 (not (xor c6 (not (xor (not c5) (xor (not (xor (xor (xor (not (not c4)) (xor x c3)) (not c2)) y)) c1)))))))))
(assert (= x (xor c3 (xor (not (not c4)) (xor (not c2) (xor y (not (xor c1 (xor (not c5) (not (xor c6 (not (xor c7 (not z))))))))))))))
(assert (= y (xor (xor (xor (not (not c4)) (xor x c3)) (not c2)) (not (xor c1 (xor (not c5) (not (xor c6 (not (xor c7 (not z)))))))))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (* (* (* (* c11 (- (+ (+ c10 (- (* (+ (* c9 (- c8 c7)) c6) c5) c4)) x) y)) c3) c2) c1)))
(assert (= x (- (+ (/ (/ (/ (/ z c1) c2) c3) c11) y) (+ c10 (- (* (+ (* c9 (- c8 c7)) c6) c5) c4)))))
(assert (= y (- (+ (+ c10 (- (* (+ (* c9 (- c8 c7)) c6) c5) c4)) x) (/ (/ (/ (/ z c1) c2) c3) c11))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (+ (+ (* (- c11 (+ (+ (* (- (+ c10 (+ (- x (+ c9 c8)) c7)) c6) c5) y) c4)) c3) c2) c1)))
(assert (= x (+ (- (- (+ (/ (- (- (- c11 (/ (- (- z c1) c2) c3)) c4) y) c5) c6) c10) c7) (+ c9 c8))))
(assert (= y (- (- (- c11 (/ (- (- z c1) c2) c3)) c4) (* (- (+ c10 (+ (- x (+ c9 c8)) c7)) c6) c5))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(assert (= z (not (not (not (xor (xor (xor (not c8) (xor (xor (not c7) (xor (xor (xor c6 (not (xor x c5))) c4) c3)) c2)) y) c1))))))
(assert (= x (xor c5 (not (xor c6 (xor c4 (xor c3 (xor (not c7) (xor c2 (xor (not c8) (xor y (xor c1 (not (not (not z)))))))))))))))
(assert (= y (xor (xor (not c8) (xor (xor (not c7) (xor (xor (xor c6 (not (xor x c5))) c4) c3)) c2)) (xor c1 (not (not (not z)))))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(assert (= z (not (not (xor (not (xor (not c8) (xor (not (xor x c7)) (not (xor (xor y c6) (xor c5 c4)))))) (xor (xor c3 c2) c1))))))
(assert (= x (xor c7 (not (xor (not (xor (xor y c6) (xor c5 c4))) (xor (not c8) (not (xor (xor (xor c3 c2) c1) (not (not z))))))))))
(assert (= y (xor c6 (xor (xor c5 c4) (not (xor (not (xor x c7)) (xor (not c8) (not (xor (xor (xor c3 c2) c1) (not (not z)))))))))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (- c11 (* (+ (+ (+ (+ (- (+ c10 (+ (+ x c9) c8)) c7) y) c6) (- (- c5 c4) c3)) c2) c1))))
(assert (= x (- (- (- (+ (- (- (- (- (div (- c11 z) c1) c2) (- (- c5 c4) c3)) c6) y) c7) c10) c8) c9)))
(assert (= y (- (- (- (- (div (- c11 z) c1) c2) (- (- c5 c4) c3)) c6) (- (+ c10 (+ (+ x c9) c8)) c7))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (- (- (* (* c11 (+ c10 c9)) c8) c7) (* (* (- (- (* c6 x) (+ (+ c5 c4) c3)) c2) y) c1))))
(assert (= x (div (+ (+ (div (div (- (- (* (* c11 (+ c10 c9)) c8) c7) z) c1) y) c2) (+ (+ c5 c4) c3)) c6)))
(assert (= y (div (div (- (- (* (* c11 (+ c10 c9)) c8) c7) z) c1) (- (- (* c6 x) (+ (+ c5 c4) c3)) c2))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (* (* (+ (- c11 (+ (* c10 (- (- (- (+ (- (+ c9 c8) c7) c6) c5) c4) c3)) c2)) c1) x) y)))
(assert (= x (div (div z y) (+ (- c11 (+ (* c10 (- (- (- (+ (- (+ c9 c8) c7) c6) c5) c4) c3)) c2)) c1))))
(assert (= y (div z (* (+ (- c11 (+ (* c10 (- (- (- (+ (- (+ c9 c8) c7) c6) c5) c4) c3)) c2)) c1) x))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (+ (- (+ (+ (+ (- (- c11 (+ (- (* (* c10 c9) (- c8 c7)) c6) x)) c5) y) c4) c3) c2) c1)))
(assert (= x (- (- c11 (+ (- (- (- (+ (- z c1) c2) c3) c4) y) c5)) (- (* (* c10 c9) (- c8 c7)) c6))))
(assert (= y (- (- (- (+ (- z c1) c2) c3) c4) (- (- c11 (+ (- (* (* c10 c9) (- c8 c7)) c6) x)) c5))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(declare-const c9 Bool)
(assert (= z (xor (not c9) (not (xor c8 (xor (xor x c7) (xor (xor c6 (not (xor (xor c5 c4) c3))) (not (xor (xor c2 y) c1)))))))))
(assert (= x (xor c7 (xor (xor (xor c6 (not (xor (xor c5 c4) c3))) (not (xor (xor c2 y) c1))) (xor c8 (not (xor (not c9) z)))))))
(assert (= y (xor c2 (xor c1 (not (xor (xor c6 (not (xor (xor c5 c4) c3))) (xor (xor x c7) (xor c8 (not (xor (not c9) z))))))))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (- (+ c11 (- (* x (* c10 (+ (- (+ c9 (+ (* (- (+ c8 c7) c6) c5) c4)) y) c3))) c2)) c1)))
(assert (= x (/ (+ (- (+ z c1) c11) c2) (* c10 (+ (- (+ c9 (+ (* (- (+ c8 c7) c6) c5) c4)) y) c3)))))
(assert (= y (- (+ c9 (+ (* (- (+ c8 c7) c6) c5) c4)) (- (/ (/ (+ (- (+ z c1) c11) c2) x) c10) c3))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (* (- (- (* c11 (+ x c10)) c9) (* (+ (+ (- c8 (+ (+ c7 (* c6 c5)) y)) c4) c3) c2)) c1)))
(assert (= x (- (div (+ (+ (div z c1) (* (+ (+ (- c8 (+ (+ c7 (* c6 c5)) y)) c4) c3) c2)) c9) c11) c10)))
(assert (= y (- (- c8 (- (- (div (- (- (* c11 (+ x c10)) c9) (div z c1)) c2) c3) c4)) (+ c7 (* c6 c5)))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (- (+ (* c11 (+ (* c10 c9) (* c8 c7))) (+ c6 (+ (+ (- (* c5 (- x y)) c4) c3) c2))) c1)))
(assert (= x (+ (/ (+ (- (- (- (- (+ z c1) (* c11 (+ (* c10 c9) (* c8 c7)))) c6) c2) c3) c4) c5) y)))
(assert (= y (- x (/ (+ (- (- (- (- (+ z c1) (* c11 (+ (* c10 c9) (* c8 c7)))) c6) c2) c3) c4) c5))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(assert (= z (xor (not c5) (xor (not (not c4)) (xor c3 (xor (not x) (not (xor c2 (not (not (not (not (xor y (not (not (not c1))))))))))))))))
(assert (= x (not (xor (not (xor c2 (not (not (not (not (xor y (not (not (not c1)))))))))) (xor c3 (xor (not (not c4)) (xor (not c5) z)))))))
(assert (= y (xor (not (not (not c1))) (not (not (not (not (xor c2 (not (xor (not x) (xor c3 (xor (not (not c4)) (xor (not c5) z)))))))))))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (* c11 (- (* c10 (+ (+ (* (* (- (* c9 (- (- (- c8 c7) c6) c5)) x) y) c4) c3) c2)) c1))))
(assert (= x (- (* c9 (- (- (- c8 c7) c6) c5)) (div (div (- (- (div (+ (div z c11) c1) c10) c2) c3) c4) y))))
(assert (= y (div (div (- (- (div (+ (div z c11) c1) c10) c2) c3) c4) (- (* c9 (- (- (- c8 c7) c6) c5)) x))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (+ x (+ c11 (+ (* (* (- (- c10 c9) (- c8 y)) (+ (* (- (- c7 c6) c5) c4) c3)) c2) c1)))))
(assert (= x (- z (+ c11 (+ (* (* (- (- c10 c9) (- c8 y)) (+ (* (- (- c7 c6) c5) c4) c3)) c2) c1)))))
(assert (= y (- c8 (- (- c10 c9) (/ (/ (- (- (- z x) c11) c1) c2) (+ (* (- (- c7 c6) c5) c4) c3))))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (* (+ (- (- (+ (+ (* (* c11 (+ c10 (+ (- (* c9 c8) c7) x))) c6) c5) c4) y) c3) c2) c1)))
(assert (= x (- (- (div (div (- (- (+ (+ (- (div z c1) c2) c3) y) c4) c5) c6) c11) c10) (- (* c9 c8) c7))))
(assert (= y (- (+ (+ (* (* c11 (+ c10 (+ (- (* c9 c8) c7) x))) c6) c5) c4) (+ (- (div z c1) c2) c3))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(assert (= z (not (not (xor (xor c7 (not (xor (xor x (xor c6 (not (not c5)))) (not c4)))) (xor (not (xor (xor c3 (not c2)) c1)) y))))))
(assert (= x (xor (xor c6 (not (not c5))) (xor (not c4) (not (xor c7 (xor (xor (not (xor (xor c3 (not c2)) c1)) y) (not (not z)))))))))
(assert (= y (xor (not (xor (xor c3 (not c2)) c1)) (xor (xor c7 (not (xor (xor x (xor c6 (not (not c5)))) (not c4)))) (not (not z))))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(assert (= z (xor (not (not (not x))) (not (not (xor (xor y c5) (not (not (not (not (not (xor c4 (xor c3 (not (not (xor c2 c1))))))))))))))))
(assert (= x (not (not (not (xor (not (not (xor (xor y c5) (not (not (not (not (not (xor c4 (xor c3 (not (not (xor c2 c1))))))))))))) z))))))
(assert (= y (xor c5 (xor (not (not (not (not (not (xor c4 (xor c3 (not (not (xor c2 c1)))))))))) (not (not (xor (not (not (not x))) z)))))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(assert (= z (xor c6 (xor c5 (xor (not (not (not c4))) (xor x (not (not (not (not (not (xor y (xor c3 (not (not (xor c2 c1))))))))))))))))
(assert (= x (xor (not (not (not (not (not (xor y (xor c3 (not (not (xor c2 c1)))))))))) (xor (not (not (not c4))) (xor c5 (xor c6 z))))))
(assert (= y (xor (xor c3 (not (not (xor c2 c1)))) (not (not (not (not (not (xor x (xor (not (not (not c4))) (xor c5 (xor c6 z))))))))))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(declare-const c9 Bool)
(declare-const c10 Bool)
(assert (= z (xor (xor c10 x) (xor c9 (xor c8 (xor c7 (xor y (xor (not c6) (xor c5 (not (xor (xor c4 (xor c3 c2)) c1)))))))))))
(assert (= x (xor c10 (xor (xor c9 (xor c8 (xor c7 (xor y (xor (not c6) (xor c5 (not (xor (xor c4 (xor c3 c2)) c1)))))))) z))))
(assert (= y (xor (xor (not c6) (xor c5 (not (xor (xor c4 (xor c3 c2)) c1)))) (xor c7 (xor c8 (xor c9 (xor (xor c10 x) z)))))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (* (- (+ c11 (* c10 (- (+ (+ (+ (* (* (* (- c9 x) y) c8) c7) c6) c5) c4) c3))) c2) c1)))
(assert (= x (- c9 (/ (/ (/ (- (- (- (+ (/ (- (+ (/ z c1) c2) c11) c10) c3) c4) c5) c6) c7) c8) y))))
(assert (= y (/ (/ (/ (- (- (- (+ (/ (- (+ (/ z c1) c2) c11) c10) c3) c4) c5) c6) c7) c8) (- c9 x))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(assert (= z (not (not (not (xor (not (not (xor (not c6) (not c5)))) (not (xor (not (xor (not x) (xor y c4))) (xor (xor c3 c2) c1)))))))))
(assert (= x (not (xor (xor y c4) (not (xor (xor (xor c3 c2) c1) (not (xor (not (not (xor (not c6) (not c5)))) (not (not (not z)))))))))))
(assert (= y (xor c4 (xor (not x) (not (xor (xor (xor c3 c2) c1) (not (xor (not (not (xor (not c6) (not c5)))) (not (not (not z)))))))))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (* (* (- x (+ c11 (* (+ c10 (- (- c9 c8) y)) (+ (- (+ (* c7 c6) c5) c4) c3)))) c2) c1)))
(assert (= x (+ (/ (/ z c1) c2) (+ c11 (* (+ c10 (- (- c9 c8) y)) (+ (- (+ (* c7 c6) c5) c4) c3))))))
(assert (= y (- (- c9 c8) (- (/ (- (- x (/ (/ z c1) c2)) c11) (+ (- (+ (* c7 c6) c5) c4) c3)) c10))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (* c11 (+ c10 (* (- (+ x c9) c8) (- (* y (* (+ (+ c7 (* (- c6 c5) c4)) c3) c2)) c1))))))
(assert (= x (- (+ (div (- (div z c11) c10) (- (* y (* (+ (+ c7 (* (- c6 c5) c4)) c3) c2)) c1)) c8) c9)))
(assert (= y (div (+ (div (- (div z c11) c10) (- (+ x c9) c8)) c1) (* (+ (+ c7 (* (- c6 c5) c4)) c3) c2))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(assert (= z (xor (not c8) (not (xor c7 (xor c6 (xor x (xor y (xor (xor (not (not c5)) (not c4)) (xor (not (xor c3 c2)) c1))))))))))
(assert (= x (xor (xor y (xor (xor (not (not c5)) (not c4)) (xor (not (xor c3 c2)) c1))) (xor c6 (xor c7 (not (xor (not c8) z)))))))
(assert (= y (xor (xor (xor (not (not c5)) (not c4)) (xor (not (xor c3 c2)) c1)) (xor x (xor c6 (xor c7 (not (xor (not c8) z))))))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (- (- (- (+ (* (* (- (- (+ (- c11 (* c10 c9)) (* c8 c7)) x) c6) c5) c4) c3) c2) c1) y)))
(assert (= x (- (+ (- c11 (* c10 c9)) (* c8 c7)) (+ (/ (/ (- (+ (+ (+ z y) c1) c2) c3) c4) c5) c6))))
(assert (= y (- (- (- (+ (* (* (- (- (+ (- c11 (* c10 c9)) (* c8 c7)) x) c6) c5) c4) c3) c2) c1) z)))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (* x (- c11 (* c10 (- c9 (* (* c8 c7) (* (* (- (+ (- c6 (- c5 c4)) c3) c2) y) c1))))))))
(assert (= x (/ z (- c11 (* c10 (- c9 (* (* c8 c7) (* (* (- (+ (- c6 (- c5 c4)) c3) c2) y) c1))))))))
(assert (= y (/ (/ (/ (- c9 (/ (- c11 (/ z x)) c10)) (* c8 c7)) c1) (- (+ (- c6 (- c5 c4)) c3) c2))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (+ (+ (- (+ (+ c11 x) c10) (* c9 (+ (+ (+ c8 (+ c7 c6)) y) (- (* c5 c4) c3)))) c2) c1)))
(assert (= x (- (- (+ (- (- z c1) c2) (* c9 (+ (+ (+ c8 (+ c7 c6)) y) (- (* c5 c4) c3)))) c10) c11)))
(assert (= y (- (- (/ (- (+ (+ c11 x) c10) (- (- z c1) c2)) c9) (- (* c5 c4) c3)) (+ c8 (+ c7 c6)))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (* c11 (* (+ (+ (+ (+ (* (- (- (- c10 (+ (* c9 c8) c7)) c6) c5) c4) x) c3) y) c2) c1))))
(assert (= x (- (- (- (- (/ (/ z c11) c1) c2) y) c3) (* (- (- (- c10 (+ (* c9 c8) c7)) c6) c5) c4))))
(assert (= y (- (- (/ (/ z c11) c1) c2) (+ (+ (* (- (- (- c10 (+ (* c9 c8) c7)) c6) c5) c4) x) c3))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(assert (= z (xor (xor (not c7) (not (not c6))) (not (xor (xor (xor (not c5) (xor c4 (xor x (xor c3 (not (not y)))))) c2) (not c1))))))
(assert (= x (xor (xor c3 (not (not y))) (xor c4 (xor (not c5) (xor c2 (xor (not c1) (not (xor (xor (not c7) (not (not c6))) z)))))))))
(assert (= y (not (not (xor c3 (xor x (xor c4 (xor (not c5) (xor c2 (xor (not c1) (not (xor (xor (not c7) (not (not c6))) z))))))))))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (- (- (* c11 (+ (* c10 c9) (- (* (+ c8 (+ (* (+ (- c7 c6) c5) c4) x)) y) c3))) c2) c1)))
(assert (= x (- (- (div (+ (- (div (+ (+ z c1) c2) c11) (* c10 c9)) c3) y) c8) (* (+ (- c7 c6) c5) c4))))
(assert (= y (div (+ (- (div (+ (+ z c1) c2) c11) (* c10 c9)) c3) (+ c8 (+ (* (+ (- c7 c6) c5) c4) x)))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (- (+ (- c11 (* c10 c9)) (* (* (* (- x (* (+ (- (* c8 c7) c6) c5) c4)) c3) c2) y)) c1)))
(assert (= x (+ (div (div (div (- (+ z c1) (- c11 (* c10 c9))) y) c2) c3) (* (+ (- (* c8 c7) c6) c5) c4))))
(assert (= y (div (- (+ z c1) (- c11 (* c10 c9))) (* (* (- x (* (+ (- (* c8 c7) c6) c5) c4)) c3) c2))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (- (+ (* (+ (- (- (+ c11 (* c10 (- c9 c8))) c7) (* (* c6 c5) (* c4 c3))) x) y) c2) c1)))
(assert (= x (- (div (- (+ z c1) c2) y) (- (- (+ c11 (* c10 (- c9 c8))) c7) (* (* c6 c5) (* c4 c3))))))
(assert (= y (div (- (+ z c1) c2) (+ (- (- (+ c11 (* c10 (- c9 c8))) c7) (* (* c6 c5) (* c4 c3))) x))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (* c11 (+ c10 (+ (+ (* c9 c8) c7) (- (+ c6 (* x (* c5 (- (+ c4 c3) (- c2 c1))))) y))))))
(assert (= x (div (- (+ (- (- (div z c11) c10) (+ (* c9 c8) c7)) y) c6) (* c5 (- (+ c4 c3) (- c2 c1))))))
(assert (= y (- (+ c6 (* x (* c5 (- (+ c4 c3) (- c2 c1))))) (- (- (div z c11) c10) (+ (* c9 c8) c7)))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (+ (+ c11 c10) (* c9 (- (* (+ (+ (+ (+ (* (* c8 x) (- y c7)) c6) c5) c4) c3) c2) c1)))))
(assert (= x (/ (/ (- (- (- (- (/ (+ (/ (- z (+ c11 c10)) c9) c1) c2) c3) c4) c5) c6) (- y c7)) c8)))
(assert (= y (+ (/ (- (- (- (- (/ (+ (/ (- z (+ c11 c10)) c9) c1) c2) c3) c4) c5) c6) (* c8 x)) c7)))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (+ c11 (- (* (* (* c10 c9) (* c8 (- c7 (- c6 (+ (+ c5 (- c4 (- c3 x))) c2))))) y) c1))))
(assert (= x (- c3 (- c4 (- (- (- c6 (- c7 (/ (/ (/ (+ (- z c11) c1) y) (* c10 c9)) c8))) c2) c5)))))
(assert (= y (/ (+ (- z c11) c1) (* (* c10 c9) (* c8 (- c7 (- c6 (+ (+ c5 (- c4 (- c3 x))) c2))))))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (+ (* (+ (+ c11 c10) (* (* (- (- (+ (* x (* (+ y c9) c8)) c7) c6) c5) c4) c3)) c2) c1)))
(assert (= x (div (- (+ (+ (div (div (- (div (- z c1) c2) (+ c11 c10)) c3) c4) c5) c6) c7) (* (+ y c9) c8))))
(assert (= y (- (div (div (- (+ (+ (div (div (- (div (- z c1) c2) (+ c11 c10)) c3) c4) c5) c6) c7) x) c8) c9)))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (+ (* c11 c10) (* (+ (* (+ c9 x) c8) (* c7 (+ c6 (+ (- y (* (+ c5 c4) c3)) c2)))) c1))))
(assert (= x (- (/ (- (/ (- z (* c11 c10)) c1) (* c7 (+ c6 (+ (- y (* (+ c5 c4) c3)) c2)))) c8) c9)))
(assert (= y (+ (- (- (/ (- (/ (- z (* c11 c10)) c1) (* (+ c9 x) c8)) c7) c6) c2) (* (+ c5 c4) c3))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(assert (= z (not (not (xor (not c8) (xor c7 (xor c6 (not (xor x (xor c5 (xor c4 (not (not (xor (xor y (xor c3 c2)) c1))))))))))))))
(assert (= x (xor (xor c5 (xor c4 (not (not (xor (xor y (xor c3 c2)) c1))))) (not (xor c6 (xor c7 (xor (not c8) (not (not z)))))))))
(assert (= y (xor (xor c3 c2) (xor c1 (not (not (xor c4 (xor c5 (xor x (not (xor c6 (xor c7 (xor (not c8) (not (not z)))))))))))))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (+ c11 (+ (* (+ (+ (+ c10 x) c9) (* c8 (- c7 (- c6 (+ c5 c4))))) (- (+ y c3) c2)) c1))))
(assert (= x (- (- (- (div (- (- z c11) c1) (- (+ y c3) c2)) (* c8 (- c7 (- c6 (+ c5 c4))))) c9) c10)))
(assert (= y (- (+ (div (- (- z c11) c1) (+ (+ (+ c10 x) c9) (* c8 (- c7 (- c6 (+ c5 c4)))))) c2) c3)))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(assert (= z (xor c8 (not (not (xor (not x) (xor (not c7) (xor c6 (xor c5 (xor (xor (xor c4 c3) c2) (xor c1 (not (not y)))))))))))))
(assert (= x (not (xor (xor (not c7) (xor c6 (xor c5 (xor (xor (xor c4 c3) c2) (xor c1 (not (not y))))))) (not (not (xor c8 z)))))))
(assert (= y (not (not (xor c1 (xor (xor (xor c4 c3) c2) (xor c5 (xor c6 (xor (not c7) (xor (not x) (not (not (xor c8 z)))))))))))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (- (- c11 c10) (* (- (+ (- c9 (* (+ c8 (+ (* x c7) (- (* c6 c5) c4))) c3)) y) c2) c1))))
(assert (= x (/ (- (- (/ (- c9 (- (+ (/ (- (- c11 c10) z) c1) c2) y)) c3) c8) (- (* c6 c5) c4)) c7)))
(assert (= y (- (+ (/ (- (- c11 c10) z) c1) c2) (- c9 (* (+ c8 (+ (* x c7) (- (* c6 c5) c4))) c3)))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (+ (* (+ c11 c10) (+ (- c9 (- (- (+ (* (- (- (+ x c8) y) c7) c6) c5) c4) c3)) c2)) c1)))
(assert (= x (- (+ (+ (/ (- (+ (+ (- c9 (- (/ (- z c1) (+ c11 c10)) c2)) c3) c4) c5) c6) c7) y) c8)))
(assert (= y (- (+ x c8) (+ (/ (- (+ (+ (- c9 (- (/ (- z c1) (+ c11 c10)) c2)) c3) c4) c5) c6) c7))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (* c11 (* (+ (* (- (+ (* (- (- c10 (+ (* (* c9 c8) c7) x)) c6) y) c5) c4) c3) c2) c1))))
(assert (= x (- (- c10 (+ (div (- (+ (div (- (div (div z c11) c1) c2) c3) c4) c5) y) c6)) (* (* c9 c8) c7))))
(assert (= y (div (- (+ (div (- (div (div z c11) c1) c2) c3) c4) c5) (- (- c10 (+ (* (* c9 c8) c7) x)) c6))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (* (- (+ (- (+ (+ (- (+ c11 (* (+ (* x c10) (- c9 c8)) c7)) c6) y) c5) c4) c3) c2) c1)))
(assert (= x (div (- (div (- (+ (- (- (+ (- (+ (div z c1) c2) c3) c4) c5) y) c6) c11) c7) (- c9 c8)) c10)))
(assert (= y (- (- (+ (- (+ (div z c1) c2) c3) c4) c5) (- (+ c11 (* (+ (* x c10) (- c9 c8)) c7)) c6))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (- (- (+ c11 (+ (- (- x (+ (* c10 (+ (* (+ c9 (* c8 c7)) c6) c5)) c4)) c3) c2)) c1) y)))
(assert (= x (+ (+ (- (- (+ (+ z y) c1) c11) c2) c3) (+ (* c10 (+ (* (+ c9 (* c8 c7)) c6) c5)) c4))))
(assert (= y (- (- (+ c11 (+ (- (- x (+ (* c10 (+ (* (+ c9 (* c8 c7)) c6) c5)) c4)) c3) c2)) c1) z)))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (* (- (* (* c11 (+ (+ (- (+ (+ (* (+ c10 x) c9) c8) (- c7 c6)) c5) c4) c3)) c2) c1) y)))
(assert (= x (- (/ (- (- (+ (- (- (/ (/ (+ (/ z y) c1) c2) c11) c3) c4) c5) (- c7 c6)) c8) c9) c10)))
(assert (= y (/ z (- (* (* c11 (+ (+ (- (+ (+ (* (+ c10 x) c9) c8) (- c7 c6)) c5) c4) c3)) c2) c1))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(assert (= z (xor c7 (xor c6 (xor c5 (not (xor (xor (xor x (not c4)) c3) (not (not (not (xor c2 (not (xor (not (not y)) c1)))))))))))))
(assert (= x (xor (not c4) (xor c3 (xor (not (not (not (xor c2 (not (xor (not (not y)) c1)))))) (not (xor c5 (xor c6 (xor c7 z)))))))))
(assert (= y (not (not (xor c1 (not (xor c2 (not (not (not (xor (xor (xor x (not c4)) c3) (not (xor c5 (xor c6 (xor c7 z)))))))))))))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (+ c11 (+ (* (* (* c10 (+ c9 (+ (- (* (- c8 (- c7 (- c6 c5))) c4) c3) c2))) c1) x) y))))
(assert (= x (/ (- (- z c11) y) (* (* c10 (+ c9 (+ (- (* (- c8 (- c7 (- c6 c5))) c4) c3) c2))) c1))))
(assert (= y (- (- z c11) (* (* (* c10 (+ c9 (+ (- (* (- c8 (- c7 (- c6 c5))) c4) c3) c2))) c1) x))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(declare-const c9 Bool)
(declare-const c10 Bool)
(assert (= z (xor c10 (not (xor c9 (xor (xor c8 c7) (not (xor c6 (xor (xor x c5) (xor c4 (xor (xor (xor y c3) c2) c1)))))))))))
(assert (= x (xor c5 (xor (xor c4 (xor (xor (xor y c3) c2) c1)) (xor c6 (not (xor (xor c8 c7) (xor c9 (not (xor c10 z))))))))))
(assert (= y (xor c3 (xor c2 (xor c1 (xor c4 (xor (xor x c5) (xor c6 (not (xor (xor c8 c7) (xor c9 (not (xor c10 z)))))))))))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (* (- c11 (- x (- c10 (- (- (- c9 c8) (+ (+ (+ (* (* c7 c6) c5) c4) c3) y)) c2)))) c1)))
(assert (= x (+ (- c11 (div z c1)) (- c10 (- (- (- c9 c8) (+ (+ (+ (* (* c7 c6) c5) c4) c3) y)) c2)))))
(assert (= y (- (- (- c9 c8) (+ (- c10 (- x (- c11 (div z c1)))) c2)) (+ (+ (* (* c7 c6) c5) c4) c3))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(assert (= z (not (not (not (xor c7 (not (xor c6 (xor x (not (xor c5 (xor c4 (not (xor (xor y (not c3)) (not (xor c2 c1))))))))))))))))
(assert (= x (xor (not (xor c5 (xor c4 (not (xor (xor y (not c3)) (not (xor c2 c1))))))) (xor c6 (not (xor c7 (not (not (not z)))))))))
(assert (= y (xor (not c3) (xor (not (xor c2 c1)) (not (xor c4 (xor c5 (not (xor x (xor c6 (not (xor c7 (not (not (not z)))))))))))))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (+ (- (- x y) (* (- c11 (* (+ (* (* (+ (+ (+ c10 c9) c8) c7) c6) c5) c4) c3)) c2)) c1)))
(assert (= x (+ (+ (- z c1) (* (- c11 (* (+ (* (* (+ (+ (+ c10 c9) c8) c7) c6) c5) c4) c3)) c2)) y)))
(assert (= y (- x (+ (- z c1) (* (- c11 (* (+ (* (* (+ (+ (+ c10 c9) c8) c7) c6) c5) c4) c3)) c2)))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (* c11 (- (* c10 (* x (+ c9 c8))) (- (+ (+ (+ y (- (+ c7 (+ c6 c5)) c4)) c3) c2) c1)))))
(assert (= x (div (div (+ (div z c11) (- (+ (+ (+ y (- (+ c7 (+ c6 c5)) c4)) c3) c2) c1)) c10) (+ c9 c8))))
(assert (= y (- (- (- (+ (- (* c10 (* x (+ c9 c8))) (div z c11)) c1) c2) c3) (- (+ c7 (+ c6 c5)) c4))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (+ x (* (+ (+ (- c11 (* (- (- (+ (+ (* (* c10 c9) c8) c7) c6) c5) c4) c3)) c2) c1) y))))
(assert (= x (- z (* (+ (+ (- c11 (* (- (- (+ (+ (* (* c10 c9) c8) c7) c6) c5) c4) c3)) c2) c1) y))))
(assert (= y (/ (- z x) (+ (+ (- c11 (* (- (- (+ (+ (* (* c10 c9) c8) c7) c6) c5) c4) c3)) c2) c1))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (* (- (+ (* (- (* (+ c11 (- c10 c9)) c8) (* (- (+ (+ c7 x) c6) c5) c4)) c3) y) c2) c1)))
(assert (= x (- (- (+ (div (- (* (+ c11 (- c10 c9)) c8) (div (- (+ (div z c1) c2) y) c3)) c4) c5) c6) c7)))
(assert (= y (- (+ (div z c1) c2) (* (- (* (+ c11 (- c10 c9)) c8) (* (- (+ (+ c7 x) c6) c5) c4)) c3))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (+ (- (- c11 (- c10 x)) (- c9 (- c8 c7))) (+ c6 (- (+ (- (+ (+ c5 c4) c3) y) c2) c1)))))
(assert (= x (- c10 (- c11 (+ (- z (+ c6 (- (+ (- (+ (+ c5 c4) c3) y) c2) c1))) (- c9 (- c8 c7)))))))
(assert (= y (- (+ (+ c5 c4) c3) (- (+ (- (- z (- (- c11 (- c10 x)) (- c9 (- c8 c7)))) c6) c1) c2))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(declare-const c9 Bool)
(assert (= z (xor (not c9) (xor c8 (xor c7 (not (xor c6 (xor x (xor c5 (not (xor (not (xor c4 y)) (xor c3 (xor c2 c1)))))))))))))
(assert (= x (xor (xor c5 (not (xor (not (xor c4 y)) (xor c3 (xor c2 c1))))) (xor c6 (not (xor c7 (xor c8 (xor (not c9) z))))))))
(assert (= y (xor c4 (not (xor (xor c3 (xor c2 c1)) (not (xor c5 (xor x (xor c6 (not (xor c7 (xor c8 (xor (not c9) z)))))))))))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (+ c11 (- (* (- x c10) (+ (- (* (* (* c9 (- (+ (- c8 c7) c6) c5)) y) c4) c3) c2)) c1))))
(assert (= x (+ (div (+ (- z c11) c1) (+ (- (* (* (* c9 (- (+ (- c8 c7) c6) c5)) y) c4) c3) c2)) c10)))
(assert (= y (div (div (+ (- (div (+ (- z c11) c1) (- x c10)) c2) c3) c4) (* c9 (- (+ (- c8 c7) c6) c5)))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(assert (= z (xor c8 (xor c7 (xor c6 (xor (not x) (xor (not (not (not (xor c5 (xor (xor c4 c3) c2))))) (xor y (not (not c1))))))))))
(assert (= x (not (xor (xor (not (not (not (xor c5 (xor (xor c4 c3) c2))))) (xor y (not (not c1)))) (xor c6 (xor c7 (xor c8 z)))))))
(assert (= y (xor (not (not c1)) (xor (not (not (not (xor c5 (xor (xor c4 c3) c2))))) (xor (not x) (xor c6 (xor c7 (xor c8 z))))))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(assert (= z (xor c6 (xor x (not (not (not (not (not (xor c5 (not (xor y (not (not (xor c4 (not (xor c3 (xor (not c2) c1))))))))))))))))))
(assert (= x (xor (not (not (not (not (not (xor c5 (not (xor y (not (not (xor c4 (not (xor c3 (xor (not c2) c1)))))))))))))) (xor c6 z))))
(assert (= y (xor (not (not (xor c4 (not (xor c3 (xor (not c2) c1)))))) (not (xor c5 (not (not (not (not (not (xor x (xor c6 z))))))))))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (- (- (* (- c11 (* (- x (- (+ c10 (- (+ (+ (- c9 c8) c7) y) c6)) c5)) c4)) c3) c2) c1)))
(assert (= x (+ (/ (- c11 (/ (+ (+ z c1) c2) c3)) c4) (- (+ c10 (- (+ (+ (- c9 c8) c7) y) c6)) c5))))
(assert (= y (- (+ (- (+ (- x (/ (- c11 (/ (+ (+ z c1) c2) c3)) c4)) c5) c10) c6) (+ (- c9 c8) c7))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (* c11 (- (- (* c10 c9) (* c8 (- (- (- (* c7 (+ x (+ (* c6 c5) c4))) c3) c2) y))) c1))))
(assert (= x (- (/ (+ (+ (+ (/ (- (* c10 c9) (+ (/ z c11) c1)) c8) y) c2) c3) c7) (+ (* c6 c5) c4))))
(assert (= y (- (- (- (* c7 (+ x (+ (* c6 c5) c4))) c3) c2) (/ (- (* c10 c9) (+ (/ z c11) c1)) c8))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (+ x (+ (+ (+ c11 y) c10) (* (* (* (- (+ c9 (+ (- (- c8 c7) c6) c5)) c4) c3) c2) c1)))))
(assert (= x (- z (+ (+ (+ c11 y) c10) (* (* (* (- (+ c9 (+ (- (- c8 c7) c6) c5)) c4) c3) c2) c1)))))
(assert (= y (- (- (- (- z x) (* (* (* (- (+ c9 (+ (- (- c8 c7) c6) c5)) c4) c3) c2) c1)) c10) c11)))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (- c11 (* (- (* c10 (+ c9 (* c8 x))) c7) (- (* (* (* y c6) (* (* c5 c4) c3)) c2) c1)))))
(assert (= x (div (- (div (+ (div (- c11 z) (- (* (* (* y c6) (* (* c5 c4) c3)) c2) c1)) c7) c10) c9) c8)))
(assert (= y (div (div (div (+ (div (- c11 z) (- (* c10 (+ c9 (* c8 x))) c7)) c1) c2) (* (* c5 c4) c3)) c6)))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (- c11 (+ (+ x (* (* c10 (+ c9 c8)) (+ (+ (- c7 c6) (+ (+ (+ c5 c4) c3) c2)) c1))) y))))
(assert (= x (- (- (- c11 z) y) (* (* c10 (+ c9 c8)) (+ (+ (- c7 c6) (+ (+ (+ c5 c4) c3) c2)) c1)))))
(assert (= y (- (- c11 z) (+ x (* (* c10 (+ c9 c8)) (+ (+ (- c7 c6) (+ (+ (+ c5 c4) c3) c2)) c1))))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(assert (= z (xor c8 (xor c7 (not (xor (xor c6 c5) (not (not (not (xor (xor (not c4) c3) (not (xor x (xor (xor y c2) c1)))))))))))))
(assert (= x (xor (xor (xor y c2) c1) (not (xor (xor (not c4) c3) (not (not (not (xor (xor c6 c5) (not (xor c7 (xor c8 z))))))))))))
(assert (= y (xor c2 (xor c1 (xor x (not (xor (xor (not c4) c3) (not (not (not (xor (xor c6 c5) (not (xor c7 (xor c8 z))))))))))))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (* (+ (* (* (+ c11 c10) c9) c8) (- (* (* (+ (- (- (- c7 x) c6) c5) c4) c3) y) c2)) c1)))
(assert (= x (- c7 (+ (+ (- (div (div (+ (- (div z c1) (* (* (+ c11 c10) c9) c8)) c2) y) c3) c4) c5) c6))))
(assert (= y (div (+ (- (div z c1) (* (* (+ c11 c10) c9) c8)) c2) (* (+ (- (- (- c7 x) c6) c5) c4) c3))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (* c11 (* (- (* (+ (- (* c10 (- x (+ (- c9 c8) (+ (* c7 c6) c5)))) c4) c3) y) c2) c1))))
(assert (= x (+ (div (+ (- (div (+ (div (div z c11) c1) c2) y) c3) c4) c10) (+ (- c9 c8) (+ (* c7 c6) c5)))))
(assert (= y (div (+ (div (div z c11) c1) c2) (+ (- (* c10 (- x (+ (- c9 c8) (+ (* c7 c6) c5)))) c4) c3))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (* (+ (- (* (* c11 c10) (* (* c9 c8) x)) c7) c6) (- (* (- (* c5 (- c4 c3)) c2) y) c1))))
(assert (= x (/ (/ (+ (- (/ z (- (* (- (* c5 (- c4 c3)) c2) y) c1)) c6) c7) (* c11 c10)) (* c9 c8))))
(assert (= y (/ (+ (/ z (+ (- (* (* c11 c10) (* (* c9 c8) x)) c7) c6)) c1) (- (* c5 (- c4 c3)) c2))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (* (* c11 (* c10 (+ (- (* (+ (* c9 (* (- (- c8 x) (+ c7 c6)) c5)) c4) c3) c2) c1))) y)))
(assert (= x (- c8 (+ (div (div (- (div (+ (- (div (div (div z y) c11) c10) c1) c2) c3) c4) c9) c5) (+ c7 c6)))))
(assert (= y (div z (* c11 (* c10 (+ (- (* (+ (* c9 (* (- (- c8 x) (+ c7 c6)) c5)) c4) c3) c2) c1))))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (+ c11 (+ x (* c10 (* (+ (- (* c9 (- (+ (- c8 c7) (- (+ c6 c5) c4)) c3)) c2) c1) y))))))
(assert (= x (- (- z c11) (* c10 (* (+ (- (* c9 (- (+ (- c8 c7) (- (+ c6 c5) c4)) c3)) c2) c1) y)))))
(assert (= y (div (div (- (- z c11) x) c10) (+ (- (* c9 (- (+ (- c8 c7) (- (+ c6 c5) c4)) c3)) c2) c1))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(assert (= z (not (not (not (not (xor (not c6) (not (xor (not c5) (not (xor x (xor y (not (xor (xor (not (xor c4 c3)) c2) c1))))))))))))))
(assert (= x (xor (xor y (not (xor (xor (not (xor c4 c3)) c2) c1))) (not (xor (not c5) (not (xor (not c6) (not (not (not (not z)))))))))))
(assert (= y (xor (not (xor (xor (not (xor c4 c3)) c2) c1)) (xor x (not (xor (not c5) (not (xor (not c6) (not (not (not (not z))))))))))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (+ (+ c11 c10) (+ (- (* c9 (+ x c8)) c7) (- c6 (+ (- (* (+ y c5) c4) c3) (+ c2 c1)))))))
(assert (= x (- (/ (+ (- (- z (+ c11 c10)) (- c6 (+ (- (* (+ y c5) c4) c3) (+ c2 c1)))) c7) c9) c8)))
(assert (= y (- (/ (+ (- (- c6 (- (- z (+ c11 c10)) (- (* c9 (+ x c8)) c7))) (+ c2 c1)) c3) c4) c5)))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (* x (- (- (- c11 (- (+ (- (- y (* (* c10 c9) c8)) c7) (* (+ c6 c5) c4)) c3)) c2) c1))))
(assert (= x (/ z (- (- (- c11 (- (+ (- (- y (* (* c10 c9) c8)) c7) (* (+ c6 c5) c4)) c3)) c2) c1))))
(assert (= y (+ (+ (- (+ (- c11 (+ (+ (/ z x) c1) c2)) c3) (* (+ c6 c5) c4)) c7) (* (* c10 c9) c8))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (* (+ (* (* (+ (* (* (- (* (+ (- c11 (+ c10 c9)) x) c8) c7) y) c6) c5) c4) c3) c2) c1)))
(assert (= x (- (div (+ (div (div (- (div (div (- (div z c1) c2) c3) c4) c5) c6) y) c7) c8) (- c11 (+ c10 c9)))))
(assert (= y (div (div (- (div (div (- (div z c1) c2) c3) c4) c5) c6) (- (* (+ (- c11 (+ c10 c9)) x) c8) c7))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (- (- (- (* (* (+ x (* (* (- (* c11 (+ (+ c10 c9) c8)) y) c7) c6)) c5) c4) c3) c2) c1)))
(assert (= x (- (div (div (+ (+ (+ z c1) c2) c3) c4) c5) (* (* (- (* c11 (+ (+ c10 c9) c8)) y) c7) c6))))
(assert (= y (- (* c11 (+ (+ c10 c9) c8)) (div (div (- (div (div (+ (+ (+ z c1) c2) c3) c4) c5) x) c6) c7))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(assert (= z (not (not (not (not (not (not (xor (not x) (xor c7 (not (xor (xor c6 c5) (xor y (xor c4 (xor c3 (xor c2 c1))))))))))))))))
(assert (= x (not (xor (xor c7 (not (xor (xor c6 c5) (xor y (xor c4 (xor c3 (xor c2 c1))))))) (not (not (not (not (not (not z))))))))))
(assert (= y (xor (xor c4 (xor c3 (xor c2 c1))) (xor (xor c6 c5) (not (xor c7 (xor (not x) (not (not (not (not (not (not z)))))))))))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (* (+ c11 c10) (* (+ (+ c9 c8) x) (* c7 (* (* c6 (- y (+ c5 (* (+ c4 c3) c2)))) c1))))))
(assert (= x (- (div (div z (+ c11 c10)) (* c7 (* (* c6 (- y (+ c5 (* (+ c4 c3) c2)))) c1))) (+ c9 c8))))
(assert (= y (+ (div (div (div (div (div z (+ c11 c10)) (+ (+ c9 c8) x)) c7) c1) c6) (+ c5 (* (+ c4 c3) c2)))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (+ (+ (+ (+ c11 (- (+ x (- (- (+ (+ (+ (+ c10 c9) c8) c7) c6) c5) c4)) c3)) c2) c1) y)))
(assert (= x (- (+ (- (- (- (- z y) c1) c2) c11) c3) (- (- (+ (+ (+ (+ c10 c9) c8) c7) c6) c5) c4))))
(assert (= y (- z (+ (+ (+ c11 (- (+ x (- (- (+ (+ (+ (+ c10 c9) c8) c7) c6) c5) c4)) c3)) c2) c1))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (* c11 (+ (* c10 (* (* (- (+ (- (* (+ c9 (* (- c8 c7) c6)) x) c5) c4) c3) c2) y)) c1))))
(assert (= x (div (+ (- (+ (div (div (div (- (div z c11) c1) c10) y) c2) c3) c4) c5) (+ c9 (* (- c8 c7) c6)))))
(assert (= y (div (div (- (div z c11) c1) c10) (* (- (+ (- (* (+ c9 (* (- c8 c7) c6)) x) c5) c4) c3) c2))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (- (* (- (* c11 (- (+ c10 c9) (* (- (+ x y) c8) (- (+ c7 (* c6 c5)) c4)))) c3) c2) c1)))
(assert (= x (- (+ (div (- (+ c10 c9) (div (+ (div (+ z c1) c2) c3) c11)) (- (+ c7 (* c6 c5)) c4)) c8) y)))
(assert (= y (- (+ (div (- (+ c10 c9) (div (+ (div (+ z c1) c2) c3) c11)) (- (+ c7 (* c6 c5)) c4)) c8) x)))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (+ (* x (* c11 (+ (- c10 c9) (* (* c8 (* (* (+ (- (+ c7 c6) y) c5) c4) c3)) c2)))) c1)))
(assert (= x (div (- z c1) (* c11 (+ (- c10 c9) (* (* c8 (* (* (+ (- (+ c7 c6) y) c5) c4) c3)) c2))))))
(assert (= y (- (+ c7 c6) (- (div (div (div (div (- (div (div (- z c1) x) c11) (- c10 c9)) c2) c8) c3) c4) c5))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (* (+ x c11) (* c10 (* c9 (+ c8 (* (* (+ c7 (+ c6 c5)) (- (- c4 (+ c3 c2)) y)) c1)))))))
(assert (= x (- (/ z (* c10 (* c9 (+ c8 (* (* (+ c7 (+ c6 c5)) (- (- c4 (+ c3 c2)) y)) c1))))) c11)))
(assert (= y (- (- c4 (+ c3 c2)) (/ (/ (- (/ (/ (/ z (+ x c11)) c10) c9) c8) c1) (+ c7 (+ c6 c5))))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (* (* (- x (+ c11 (- (+ c10 (+ (* c9 (* c8 c7)) (+ c6 c5))) c4))) c3) (- c2 (* c1 y)))))
(assert (= x (+ (/ (/ z (- c2 (* c1 y))) c3) (+ c11 (- (+ c10 (+ (* c9 (* c8 c7)) (+ c6 c5))) c4)))))
(assert (= y (/ (- c2 (/ z (* (- x (+ c11 (- (+ c10 (+ (* c9 (* c8 c7)) (+ c6 c5))) c4))) c3))) c1)))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (* (* (- (* c11 c10) (+ (+ c9 (+ c8 (- (+ (- (- (* c7 c6) c5) x) y) c4))) c3)) c2) c1)))
(assert (= x (- (- (* c7 c6) c5) (- (+ (- (- (- (- (* c11 c10) (/ (/ z c1) c2)) c3) c9) c8) c4) y))))
(assert (= y (- (+ (- (- (- (- (* c11 c10) (/ (/ z c1) c2)) c3) c9) c8) c4) (- (- (* c7 c6) c5) x))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(assert (= z (xor x (not (not (xor c5 (not (not (not (not (not (xor (not (xor (not y) c4)) (not (not (not (xor (xor c3 c2) c1))))))))))))))))
(assert (= x (xor (not (not (xor c5 (not (not (not (not (not (xor (not (xor (not y) c4)) (not (not (not (xor (xor c3 c2) c1))))))))))))) z)))
(assert (= y (not (xor c4 (not (xor (not (not (not (xor (xor c3 c2) c1)))) (not (not (not (not (not (xor c5 (not (not (xor x z)))))))))))))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (+ (- (- c11 x) (* (* y (* (* (- (- c10 c9) (+ c8 c7)) (- c6 c5)) (* c4 c3))) c2)) c1)))
(assert (= x (- c11 (+ (- z c1) (* (* y (* (* (- (- c10 c9) (+ c8 c7)) (- c6 c5)) (* c4 c3))) c2)))))
(assert (= y (/ (/ (- (- c11 x) (- z c1)) c2) (* (* (- (- c10 c9) (+ c8 c7)) (- c6 c5)) (* c4 c3)))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (+ (* c11 c10) (+ (+ c9 (+ (+ (+ c8 (* (+ c7 (* (+ (* x c6) c5) c4)) c3)) y) c2)) c1))))
(assert (= x (/ (- (/ (- (/ (- (- (- (- (- (- z (* c11 c10)) c1) c9) c2) y) c8) c3) c7) c4) c5) c6)))
(assert (= y (- (- (- (- (- z (* c11 c10)) c1) c9) c2) (+ c8 (* (+ c7 (* (+ (* x c6) c5) c4)) c3)))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(assert (= z (xor (xor (not c8) (not x)) (xor c7 (xor (not (xor (xor (xor (not (xor (xor c6 (not c5)) c4)) y) c3) c2)) (not c1))))))
(assert (= x (not (xor (not c8) (xor (xor c7 (xor (not (xor (xor (xor (not (xor (xor c6 (not c5)) c4)) y) c3) c2)) (not c1))) z)))))
(assert (= y (xor (not (xor (xor c6 (not c5)) c4)) (xor c3 (xor c2 (not (xor (not c1) (xor c7 (xor (xor (not c8) (not x)) z)))))))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (* (* (- (+ (* (* (- c11 c10) c9) c8) (- (- (+ (+ (- c7 c6) c5) c4) c3) c2)) x) y) c1)))
(assert (= x (- (+ (* (* (- c11 c10) c9) c8) (- (- (+ (+ (- c7 c6) c5) c4) c3) c2)) (div (div z c1) y))))
(assert (= y (div (div z c1) (- (+ (* (* (- c11 c10) c9) c8) (- (- (+ (+ (- c7 c6) c5) c4) c3) c2)) x))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (* c11 (- (* (- c10 c9) (* x (* (- (* c8 c7) (- c6 (+ c5 (+ c4 c3)))) c2))) (- y c1)))))
(assert (= x (/ (/ (+ (/ z c11) (- y c1)) (- c10 c9)) (* (- (* c8 c7) (- c6 (+ c5 (+ c4 c3)))) c2))))
(assert (= y (+ (- (* (- c10 c9) (* x (* (- (* c8 c7) (- c6 (+ c5 (+ c4 c3)))) c2))) (/ z c11)) c1)))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (* c11 (- (- (+ (- (* (+ (+ (+ (- (+ c10 (+ c9 c8)) x) c7) c6) c5) c4) c3) c2) y) c1))))
(assert (= x (- (+ c10 (+ c9 c8)) (- (- (- (/ (+ (- (+ (+ (/ z c11) c1) y) c2) c3) c4) c5) c6) c7))))
(assert (= y (- (+ (- (* (+ (+ (+ (- (+ c10 (+ c9 c8)) x) c7) c6) c5) c4) c3) c2) (+ (/ z c11) c1))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (- (* c11 (+ (+ c10 (+ c9 (* (+ c8 c7) (- (- x (+ y (+ (+ c6 c5) c4))) c3)))) c2)) c1)))
(assert (= x (+ (+ (div (- (- (- (div (+ z c1) c11) c2) c10) c9) (+ c8 c7)) c3) (+ y (+ (+ c6 c5) c4)))))
(assert (= y (- (- x (+ (div (- (- (- (div (+ z c1) c11) c2) c10) c9) (+ c8 c7)) c3)) (+ (+ c6 c5) c4))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (* (+ c11 c10) (* (- c9 (* (* (* (* (* c8 (- c7 (+ c6 (- x y)))) c5) c4) c3) c2)) c1))))
(assert (= x (+ (- (- c7 (div (div (div (div (div (- c9 (div (div z (+ c11 c10)) c1)) c2) c3) c4) c5) c8)) c6) y)))
(assert (= y (- x (- (- c7 (div (div (div (div (div (- c9 (div (div z (+ c11 c10)) c1)) c2) c3) c4) c5) c8)) c6))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(assert (= z (xor x (xor c8 (xor c7 (xor (not (xor y c6)) (xor (not c5) (not (not (xor c4 (not (xor c3 (xor (not c2) c1)))))))))))))
(assert (= x (xor (xor c8 (xor c7 (xor (not (xor y c6)) (xor (not c5) (not (not (xor c4 (not (xor c3 (xor (not c2) c1)))))))))) z)))
(assert (= y (xor c6 (not (xor (xor (not c5) (not (not (xor c4 (not (xor c3 (xor (not c2) c1))))))) (xor c7 (xor c8 (xor x z))))))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(assert (= z (* (+ c11 (+ c10 c9)) (- (- (+ (* (+ (- c8 (- (- (* c7 c6) c5) c4)) x) y) c3) c2) c1))))
(assert (= x (- (div (- (+ (+ (div z (+ c11 (+ c10 c9))) c1) c2) c3) y) (- c8 (- (- (* c7 c6) c5) c4)))))
(assert (= y (div (- (+ (+ (div z (+ c11 (+ c10 c9))) c1) c2) c3) (+ (- c8 (- (- (* c7 c6) c5) c4)) x))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(assert (= z (* c11 (- (* (+ (+ (* (* (+ c10 (+ c9 (+ (* (* c8 x) c7) c6))) c5) c4) c3) c2) y) c1))))
(assert (= x (/ (/ (- (- (- (/ (/ (- (- (/ (+ (/ z c11) c1) y) c2) c3) c4) c5) c10) c9) c6) c7) c8)))
(assert (= y (/ (+ (/ z c11) c1) (+ (+ (* (* (+ c10 (+ c9 (+ (* (* c8 x) c7) c6))) c5) c4) c3) c2))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(assert (= z (xor c6 (xor c5 (xor (not c4) (not (not (not (xor c3 (not (not (not (xor (not (xor c2 (not x))) (not (xor y c1)))))))))))))))
(assert (= x (not (xor c2 (not (xor (not (xor y c1)) (not (not (not (xor c3 (not (not (not (xor (not c4) (xor c5 (xor c6 z))))))))))))))))
(assert (= y (xor c1 (not (xor (not (xor c2 (not x))) (not (not (not (xor c3 (not (not (not (xor (not c4) (xor c5 (xor c6 z)))))))))))))))
#end
