; Generated with: https://github.com/nicdard/fusion-function-generator
; 60 functions (number of #begin ... #end blocks)
; 30 operators per function

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(declare-const c12 Real)
(declare-const c13 Real)
(declare-const c14 Real)
(assert (= z (- (* (- c14 (* (+ (- (- (+ (+ (+ (- (+ (* (+ c13 (- c12 c11)) c10) c9) x) c8) c7) c6) c5) y) c4) c3)) c2) c1)))
(assert (= x (- (+ (* (+ c13 (- c12 c11)) c10) c9) (- (- (- (+ (+ (- (/ (- c14 (/ (+ z c1) c2)) c3) c4) y) c5) c6) c7) c8))))
(assert (= y (- (- (+ (+ (+ (- (+ (* (+ c13 (- c12 c11)) c10) c9) x) c8) c7) c6) c5) (- (/ (- c14 (/ (+ z c1) c2)) c3) c4))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(declare-const c9 Bool)
(declare-const c10 Bool)
(assert (= z (xor (xor (not x) c10) (not (xor c9 (not (xor c8 (xor c7 (xor c6 (xor (not (xor (xor y (not (not (xor (not (xor c5 c4)) c3)))) c2)) c1))))))))))
(assert (= x (not (xor c10 (xor (not (xor c9 (not (xor c8 (xor c7 (xor c6 (xor (not (xor (xor y (not (not (xor (not (xor c5 c4)) c3)))) c2)) c1))))))) z)))))
(assert (= y (xor (not (not (xor (not (xor c5 c4)) c3))) (xor c2 (not (xor c1 (xor c6 (xor c7 (xor c8 (not (xor c9 (not (xor (xor (not x) c10) z)))))))))))))
#end

#begin
(declare-const x String)
(declare-const y String)
(declare-const z String)
(declare-const c1 String)
(declare-const c2 String)
(declare-const c3 String)
(declare-const c4 String)
(declare-const c5 String)
(declare-const c6 String)
(declare-const c7 String)
(declare-const c8 String)
(declare-const c9 String)
(declare-const c10 String)
(declare-const c11 String)
(declare-const c12 String)
(declare-const c13 String)
(declare-const c14 String)
(assert (= z (str.++ x (str.++ c14 (str.++ (str.++ c13 c12) (str.++ y (str.++ (str.++ (str.++ c11 c10) c9) (str.++ (str.++ (str.++ c8 c7) c6) (str.++ (str.++ (str.++ c5 (str.++ c4 c3)) c2) c1)))))))))
(assert (= x (str.substr z 0 (str.indexof z (str.++ c14 (str.++ (str.++ c13 c12) (str.++ y (str.++ (str.++ (str.++ c11 c10) c9) (str.++ (str.++ (str.++ c8 c7) c6) (str.++ (str.++ (str.++ c5 (str.++ c4 c3)) c2) c1)))))) (str.len x)))))
(assert (= y (str.substr (str.substr (str.substr (str.substr z (str.len x) (str.len (str.++ c14 (str.++ (str.++ c13 c12) (str.++ y (str.++ (str.++ (str.++ c11 c10) c9) (str.++ (str.++ (str.++ c8 c7) c6) (str.++ (str.++ (str.++ c5 (str.++ c4 c3)) c2) c1)))))))) (str.indexof (str.substr z (str.len x) (str.len (str.++ c14 (str.++ (str.++ c13 c12) (str.++ y (str.++ (str.++ (str.++ c11 c10) c9) (str.++ (str.++ (str.++ c8 c7) c6) (str.++ (str.++ (str.++ c5 (str.++ c4 c3)) c2) c1)))))))) (str.++ (str.++ c13 c12) (str.++ y (str.++ (str.++ (str.++ c11 c10) c9) (str.++ (str.++ (str.++ c8 c7) c6) (str.++ (str.++ (str.++ c5 (str.++ c4 c3)) c2) c1))))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ y (str.++ (str.++ (str.++ c11 c10) c9) (str.++ (str.++ (str.++ c8 c7) c6) (str.++ (str.++ (str.++ c5 (str.++ c4 c3)) c2) c1))))))) (str.len (str.++ c13 c12)) (str.len (str.++ y (str.++ (str.++ (str.++ c11 c10) c9) (str.++ (str.++ (str.++ c8 c7) c6) (str.++ (str.++ (str.++ c5 (str.++ c4 c3)) c2) c1)))))) 0 (str.len y))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(declare-const c12 Int)
(declare-const c13 Int)
(declare-const c14 Int)
(assert (= z (* x (+ (* c14 (+ (+ (- c13 c12) (+ (* (+ (- (* (* (+ y c11) c10) (- (- c9 c8) c7)) c6) c5) c4) c3)) c2)) c1))))
(assert (= x (div z (+ (* c14 (+ (+ (- c13 c12) (+ (* (+ (- (* (* (+ y c11) c10) (- (- c9 c8) c7)) c6) c5) c4) c3)) c2)) c1))))
(assert (= y (- (div (div (+ (- (div (- (- (- (div (- (div z x) c1) c14) c2) (- c13 c12)) c3) c4) c5) c6) (- (- c9 c8) c7)) c10) c11)))
#end

#begin
(declare-const x String)
(declare-const y String)
(declare-const z String)
(declare-const c1 String)
(declare-const c2 String)
(declare-const c3 String)
(declare-const c4 String)
(declare-const c5 String)
(declare-const c6 String)
(declare-const c7 String)
(declare-const c8 String)
(declare-const c9 String)
(declare-const c10 String)
(declare-const c11 String)
(declare-const c12 String)
(declare-const c13 String)
(declare-const c14 String)
(assert (= z (str.++ c14 (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))))))
(assert (= x (str.substr (str.substr (str.substr (str.substr (str.replace (str.substr (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))))) (str.indexof (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))))) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))) (str.len (str.++ c13 c12))) (str.len (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))))) c11 "") (str.indexof (str.replace (str.substr (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))))) (str.indexof (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))))) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))) (str.len (str.++ c13 c12))) (str.len (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))))) c11 "") (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))) (str.len c10)) (str.len (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))) 0 (str.len (str.++ (str.++ c9 x) c8))) 0 (str.indexof (str.substr (str.substr (str.replace (str.substr (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))))) (str.indexof (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))))) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))) (str.len (str.++ c13 c12))) (str.len (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))))) c11 "") (str.indexof (str.replace (str.substr (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))))) (str.indexof (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))))) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))) (str.len (str.++ c13 c12))) (str.len (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))))) c11 "") (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))) (str.len c10)) (str.len (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))) 0 (str.len (str.++ (str.++ c9 x) c8))) c8 (str.len (str.++ c9 x)))) (str.indexof (str.substr (str.substr (str.substr (str.replace (str.substr (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))))) (str.indexof (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))))) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))) (str.len (str.++ c13 c12))) (str.len (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))))) c11 "") (str.indexof (str.replace (str.substr (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))))) (str.indexof (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))))) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))) (str.len (str.++ c13 c12))) (str.len (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))))) c11 "") (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))) (str.len c10)) (str.len (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))) 0 (str.len (str.++ (str.++ c9 x) c8))) 0 (str.indexof (str.substr (str.substr (str.replace (str.substr (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))))) (str.indexof (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))))) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))) (str.len (str.++ c13 c12))) (str.len (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))))) c11 "") (str.indexof (str.replace (str.substr (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))))) (str.indexof (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))))) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))) (str.len (str.++ c13 c12))) (str.len (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))))) c11 "") (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))) (str.len c10)) (str.len (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))) 0 (str.len (str.++ (str.++ c9 x) c8))) c8 (str.len (str.++ c9 x)))) x (str.len c9)) (str.len x))))
(assert (= y (str.substr (str.substr (str.substr (str.substr (str.replace (str.substr (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))))) (str.indexof (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))))) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))) (str.len (str.++ c13 c12))) (str.len (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))))) c11 "") (str.indexof (str.replace (str.substr (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))))) (str.indexof (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))))) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))) (str.len (str.++ c13 c12))) (str.len (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))))) c11 "") (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))) (str.len c10)) (str.len (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))) (str.indexof (str.substr (str.replace (str.substr (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))))) (str.indexof (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))))) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))) (str.len (str.++ c13 c12))) (str.len (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))))) c11 "") (str.indexof (str.replace (str.substr (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))))) (str.indexof (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))))))) (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))) (str.len (str.++ c13 c12))) (str.len (str.++ c11 (str.++ c10 (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))))) c11 "") (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))) (str.len c10)) (str.len (str.++ (str.++ (str.++ c9 x) c8) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))))) (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))) (str.len (str.++ (str.++ c9 x) c8))) (str.len (str.++ c7 (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1))))))))) (str.len c7) (str.len (str.++ y (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 c1)))))))) 0 (str.len y))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(declare-const c12 Int)
(declare-const c13 Int)
(declare-const c14 Int)
(assert (= z (- c14 (* (- c13 c12) (+ c11 (+ c10 (+ (- c9 (+ x (* (* (* c8 (+ (- c7 y) (+ (* c6 c5) c4))) c3) c2))) c1)))))))
(assert (= x (- (- c9 (- (- (- (div (- c14 z) (- c13 c12)) c11) c10) c1)) (* (* (* c8 (+ (- c7 y) (+ (* c6 c5) c4))) c3) c2))))
(assert (= y (- c7 (- (div (div (div (- (- c9 (- (- (- (div (- c14 z) (- c13 c12)) c11) c10) c1)) x) c2) c3) c8) (+ (* c6 c5) c4)))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(assert (= z (not (not (not (not (not (not (xor (not (not c6)) (xor (not (not c5)) (not (not (not (not (xor (not c4) (xor x (xor c3 (xor c2 (xor y c1)))))))))))))))))))
(assert (= x (xor (xor c3 (xor c2 (xor y c1))) (xor (not c4) (not (not (not (not (xor (not (not c5)) (xor (not (not c6)) (not (not (not (not (not (not z))))))))))))))))
(assert (= y (xor c1 (xor c2 (xor c3 (xor x (xor (not c4) (not (not (not (not (xor (not (not c5)) (xor (not (not c6)) (not (not (not (not (not (not z)))))))))))))))))))
#end

#begin
(declare-const x String)
(declare-const y String)
(declare-const z String)
(declare-const c1 String)
(declare-const c2 String)
(declare-const c3 String)
(declare-const c4 String)
(declare-const c5 String)
(declare-const c6 String)
(declare-const c7 String)
(declare-const c8 String)
(declare-const c9 String)
(declare-const c10 String)
(declare-const c11 String)
(declare-const c12 String)
(declare-const c13 String)
(declare-const c14 String)
(assert (= z (str.++ (str.++ c14 c13) (str.++ (str.++ c12 c11) (str.++ x (str.++ (str.++ c10 c9) (str.++ (str.++ c8 (str.++ (str.++ (str.++ c7 c6) (str.++ c5 c4)) (str.++ c3 (str.++ c2 y)))) c1)))))))
(assert (= x (str.substr (str.substr (str.replace z (str.++ c14 c13) "") (str.indexof (str.replace z (str.++ c14 c13) "") (str.++ x (str.++ (str.++ c10 c9) (str.++ (str.++ c8 (str.++ (str.++ (str.++ c7 c6) (str.++ c5 c4)) (str.++ c3 (str.++ c2 y)))) c1))) (str.len (str.++ c12 c11))) (str.len (str.++ x (str.++ (str.++ c10 c9) (str.++ (str.++ c8 (str.++ (str.++ (str.++ c7 c6) (str.++ c5 c4)) (str.++ c3 (str.++ c2 y)))) c1))))) 0 (str.indexof (str.substr (str.replace z (str.++ c14 c13) "") (str.indexof (str.replace z (str.++ c14 c13) "") (str.++ x (str.++ (str.++ c10 c9) (str.++ (str.++ c8 (str.++ (str.++ (str.++ c7 c6) (str.++ c5 c4)) (str.++ c3 (str.++ c2 y)))) c1))) (str.len (str.++ c12 c11))) (str.len (str.++ x (str.++ (str.++ c10 c9) (str.++ (str.++ c8 (str.++ (str.++ (str.++ c7 c6) (str.++ c5 c4)) (str.++ c3 (str.++ c2 y)))) c1))))) (str.++ (str.++ c10 c9) (str.++ (str.++ c8 (str.++ (str.++ (str.++ c7 c6) (str.++ c5 c4)) (str.++ c3 (str.++ c2 y)))) c1)) (str.len x)))))
(assert (= y (str.replace (str.replace (str.replace (str.replace (str.substr (str.substr (str.replace (str.substr (str.replace z (str.++ c14 c13) "") (str.indexof (str.replace z (str.++ c14 c13) "") (str.++ x (str.++ (str.++ c10 c9) (str.++ (str.++ c8 (str.++ (str.++ (str.++ c7 c6) (str.++ c5 c4)) (str.++ c3 (str.++ c2 y)))) c1))) (str.len (str.++ c12 c11))) (str.len (str.++ x (str.++ (str.++ c10 c9) (str.++ (str.++ c8 (str.++ (str.++ (str.++ c7 c6) (str.++ c5 c4)) (str.++ c3 (str.++ c2 y)))) c1))))) x "") (str.len (str.++ c10 c9)) (str.len (str.++ (str.++ c8 (str.++ (str.++ (str.++ c7 c6) (str.++ c5 c4)) (str.++ c3 (str.++ c2 y)))) c1))) 0 (str.indexof (str.substr (str.replace (str.substr (str.replace z (str.++ c14 c13) "") (str.indexof (str.replace z (str.++ c14 c13) "") (str.++ x (str.++ (str.++ c10 c9) (str.++ (str.++ c8 (str.++ (str.++ (str.++ c7 c6) (str.++ c5 c4)) (str.++ c3 (str.++ c2 y)))) c1))) (str.len (str.++ c12 c11))) (str.len (str.++ x (str.++ (str.++ c10 c9) (str.++ (str.++ c8 (str.++ (str.++ (str.++ c7 c6) (str.++ c5 c4)) (str.++ c3 (str.++ c2 y)))) c1))))) x "") (str.len (str.++ c10 c9)) (str.len (str.++ (str.++ c8 (str.++ (str.++ (str.++ c7 c6) (str.++ c5 c4)) (str.++ c3 (str.++ c2 y)))) c1))) c1 (str.len (str.++ c8 (str.++ (str.++ (str.++ c7 c6) (str.++ c5 c4)) (str.++ c3 (str.++ c2 y))))))) c8 "") (str.++ (str.++ c7 c6) (str.++ c5 c4)) "") c3 "") c2 "")))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(declare-const c12 Real)
(declare-const c13 Real)
(declare-const c14 Real)
(assert (= z (- c14 (+ (- (+ c13 (* (* (* (- (- c12 (* (* (- (+ c11 (* (- c10 x) c9)) y) c8) c7)) c6) c5) c4) c3)) c2) c1))))
(assert (= x (- c10 (/ (- (+ (/ (/ (- c12 (+ (/ (/ (/ (- (+ (- (- c14 z) c1) c2) c13) c3) c4) c5) c6)) c7) c8) y) c11) c9))))
(assert (= y (- (+ c11 (* (- c10 x) c9)) (/ (/ (- c12 (+ (/ (/ (/ (- (+ (- (- c14 z) c1) c2) c13) c3) c4) c5) c6)) c7) c8))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(declare-const c9 Bool)
(assert (= z (not (not (xor (xor x (not (xor (xor (xor (xor c9 (not (xor (not (xor (xor (not c8) c7) (not (not c6)))) (not (xor c5 c4))))) y) c3) c2))) c1)))))
(assert (= x (xor (not (xor (xor (xor (xor c9 (not (xor (not (xor (xor (not c8) c7) (not (not c6)))) (not (xor c5 c4))))) y) c3) c2)) (xor c1 (not (not z))))))
(assert (= y (xor (xor c9 (not (xor (not (xor (xor (not c8) c7) (not (not c6)))) (not (xor c5 c4))))) (xor c3 (xor c2 (not (xor x (xor c1 (not (not z))))))))))
#end

#begin
(declare-const x String)
(declare-const y String)
(declare-const z String)
(declare-const c1 String)
(declare-const c2 String)
(declare-const c3 String)
(declare-const c4 String)
(declare-const c5 String)
(declare-const c6 String)
(declare-const c7 String)
(declare-const c8 String)
(declare-const c9 String)
(declare-const c10 String)
(declare-const c11 String)
(declare-const c12 String)
(declare-const c13 String)
(declare-const c14 String)
(assert (= z (str.++ c14 (str.++ c13 (str.++ c12 (str.++ (str.++ x y) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1)))))))))))
(assert (= x (str.substr (str.substr (str.substr (str.substr (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ (str.++ x y) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1)))))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ (str.++ x y) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1)))))))))) (str.len c13) (str.len (str.++ c12 (str.++ (str.++ x y) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1))))))))) (str.len c12) (str.len (str.++ (str.++ x y) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1)))))))) 0 (str.indexof (str.substr (str.substr (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ (str.++ x y) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1)))))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ (str.++ x y) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1)))))))))) (str.len c13) (str.len (str.++ c12 (str.++ (str.++ x y) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1))))))))) (str.len c12) (str.len (str.++ (str.++ x y) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1)))))))) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1))))) (str.len (str.++ x y)))) 0 (str.indexof (str.substr (str.substr (str.substr (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ (str.++ x y) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1)))))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ (str.++ x y) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1)))))))))) (str.len c13) (str.len (str.++ c12 (str.++ (str.++ x y) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1))))))))) (str.len c12) (str.len (str.++ (str.++ x y) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1)))))))) 0 (str.indexof (str.substr (str.substr (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ (str.++ x y) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1)))))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ (str.++ x y) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1)))))))))) (str.len c13) (str.len (str.++ c12 (str.++ (str.++ x y) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1))))))))) (str.len c12) (str.len (str.++ (str.++ x y) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1)))))))) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1))))) (str.len (str.++ x y)))) y (str.len x)))))
(assert (= y (str.substr (str.substr (str.substr (str.substr (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ (str.++ x y) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1)))))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ (str.++ x y) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1)))))))))) (str.len c13) (str.len (str.++ c12 (str.++ (str.++ x y) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1))))))))) (str.len c12) (str.len (str.++ (str.++ x y) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1)))))))) 0 (str.indexof (str.substr (str.substr (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ (str.++ x y) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1)))))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ (str.++ x y) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1)))))))))) (str.len c13) (str.len (str.++ c12 (str.++ (str.++ x y) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1))))))))) (str.len c12) (str.len (str.++ (str.++ x y) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1)))))))) (str.++ (str.++ c11 (str.++ c10 c9)) (str.++ (str.++ c8 (str.++ c7 c6)) (str.++ (str.++ c5 c4) (str.++ c3 (str.++ c2 c1))))) (str.len (str.++ x y)))) (str.len x) (str.len y))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(declare-const c12 Int)
(declare-const c13 Int)
(declare-const c14 Int)
(assert (= z (- c14 (+ c13 (- x (+ (* (+ (* (- (- c12 c11) (* (- c10 (- (- c9 (* c8 c7)) c6)) c5)) c4) (+ c3 c2)) c1) y))))))
(assert (= x (+ (- (- c14 z) c13) (+ (* (+ (* (- (- c12 c11) (* (- c10 (- (- c9 (* c8 c7)) c6)) c5)) c4) (+ c3 c2)) c1) y))))
(assert (= y (- (- x (- (- c14 z) c13)) (* (+ (* (- (- c12 c11) (* (- c10 (- (- c9 (* c8 c7)) c6)) c5)) c4) (+ c3 c2)) c1))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(declare-const c12 Int)
(declare-const c13 Int)
(declare-const c14 Int)
(assert (= z (- (+ c14 c13) (- c12 (+ (- c11 (+ (+ (* (* c10 c9) c8) c7) (* (+ (+ (* (* (- x c6) c5) c4) y) c3) c2))) c1)))))
(assert (= x (+ (div (div (- (- (div (- (- c11 (- (- c12 (- (+ c14 c13) z)) c1)) (+ (* (* c10 c9) c8) c7)) c2) c3) y) c4) c5) c6)))
(assert (= y (- (- (div (- (- c11 (- (- c12 (- (+ c14 c13) z)) c1)) (+ (* (* c10 c9) c8) c7)) c2) c3) (* (* (- x c6) c5) c4))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(declare-const c12 Real)
(declare-const c13 Real)
(declare-const c14 Real)
(assert (= z (- (+ c14 (- (+ c13 c12) c11)) (- c10 (+ (+ (* c9 (- c8 x)) c7) (* (* c6 (* (* (* y (+ c5 c4)) c3) c2)) c1))))))
(assert (= x (- c8 (/ (- (- (- c10 (- (+ c14 (- (+ c13 c12) c11)) z)) (* (* c6 (* (* (* y (+ c5 c4)) c3) c2)) c1)) c7) c9))))
(assert (= y (/ (/ (/ (/ (/ (- (- c10 (- (+ c14 (- (+ c13 c12) c11)) z)) (+ (* c9 (- c8 x)) c7)) c1) c6) c2) c3) (+ c5 c4))))
#end

#begin
(declare-const x String)
(declare-const y String)
(declare-const z String)
(declare-const c1 String)
(declare-const c2 String)
(declare-const c3 String)
(declare-const c4 String)
(declare-const c5 String)
(declare-const c6 String)
(declare-const c7 String)
(declare-const c8 String)
(declare-const c9 String)
(declare-const c10 String)
(declare-const c11 String)
(declare-const c12 String)
(declare-const c13 String)
(declare-const c14 String)
(assert (= z (str.++ c14 (str.++ c13 (str.++ c12 (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y)))))))))))))
(assert (= x (str.substr (str.substr (str.substr (str.substr (str.substr (str.replace z c14 "") (str.indexof (str.replace z c14 "") (str.++ c12 (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))) (str.len c13)) (str.len (str.++ c12 (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))))) (str.indexof (str.substr (str.replace z c14 "") (str.indexof (str.replace z c14 "") (str.++ c12 (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))) (str.len c13)) (str.len (str.++ c12 (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))))) (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y)))))))) (str.len c12)) (str.len (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y)))))))))) (str.len (str.++ c11 c10)) (str.len (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))) (str.len c9) (str.len (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y)))))))) 0 (str.indexof (str.substr (str.substr (str.substr (str.substr (str.replace z c14 "") (str.indexof (str.replace z c14 "") (str.++ c12 (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))) (str.len c13)) (str.len (str.++ c12 (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))))) (str.indexof (str.substr (str.replace z c14 "") (str.indexof (str.replace z c14 "") (str.++ c12 (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))) (str.len c13)) (str.len (str.++ c12 (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))))) (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y)))))))) (str.len c12)) (str.len (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y)))))))))) (str.len (str.++ c11 c10)) (str.len (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))) (str.len c9) (str.len (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y)))))))) (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))) (str.len x)))))
(assert (= y (str.replace (str.substr (str.replace (str.substr (str.substr (str.replace (str.substr (str.substr (str.substr (str.substr (str.replace z c14 "") (str.indexof (str.replace z c14 "") (str.++ c12 (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))) (str.len c13)) (str.len (str.++ c12 (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))))) (str.indexof (str.substr (str.replace z c14 "") (str.indexof (str.replace z c14 "") (str.++ c12 (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))) (str.len c13)) (str.len (str.++ c12 (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))))) (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y)))))))) (str.len c12)) (str.len (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y)))))))))) (str.len (str.++ c11 c10)) (str.len (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))) (str.len c9) (str.len (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y)))))))) x "") (str.indexof (str.replace (str.substr (str.substr (str.substr (str.substr (str.replace z c14 "") (str.indexof (str.replace z c14 "") (str.++ c12 (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))) (str.len c13)) (str.len (str.++ c12 (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))))) (str.indexof (str.substr (str.replace z c14 "") (str.indexof (str.replace z c14 "") (str.++ c12 (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))) (str.len c13)) (str.len (str.++ c12 (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))))) (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y)))))))) (str.len c12)) (str.len (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y)))))))))) (str.len (str.++ c11 c10)) (str.len (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))) (str.len c9) (str.len (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y)))))))) x "") (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y)))) (str.len (str.++ c8 c7))) (str.len (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y)))))) (str.indexof (str.substr (str.replace (str.substr (str.substr (str.substr (str.substr (str.replace z c14 "") (str.indexof (str.replace z c14 "") (str.++ c12 (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))) (str.len c13)) (str.len (str.++ c12 (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))))) (str.indexof (str.substr (str.replace z c14 "") (str.indexof (str.replace z c14 "") (str.++ c12 (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))) (str.len c13)) (str.len (str.++ c12 (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))))) (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y)))))))) (str.len c12)) (str.len (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y)))))))))) (str.len (str.++ c11 c10)) (str.len (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))) (str.len c9) (str.len (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y)))))))) x "") (str.indexof (str.replace (str.substr (str.substr (str.substr (str.substr (str.replace z c14 "") (str.indexof (str.replace z c14 "") (str.++ c12 (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))) (str.len c13)) (str.len (str.++ c12 (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))))) (str.indexof (str.substr (str.replace z c14 "") (str.indexof (str.replace z c14 "") (str.++ c12 (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))) (str.len c13)) (str.len (str.++ c12 (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))))) (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y)))))))) (str.len c12)) (str.len (str.++ (str.++ c11 c10) (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y)))))))))) (str.len (str.++ c11 c10)) (str.len (str.++ c9 (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))))))) (str.len c9) (str.len (str.++ x (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y)))))))) x "") (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y)))) (str.len (str.++ c8 c7))) (str.len (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y)))))) (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))) (str.len c6)) (str.len (str.++ c5 (str.++ c4 (str.++ (str.++ c3 (str.++ c2 c1)) y))))) c5 "") (str.len c4) (str.len (str.++ (str.++ c3 (str.++ c2 c1)) y))) (str.++ c3 (str.++ c2 c1)) "")))
#end

#begin
(declare-const x String)
(declare-const y String)
(declare-const z String)
(declare-const c1 String)
(declare-const c2 String)
(declare-const c3 String)
(declare-const c4 String)
(declare-const c5 String)
(declare-const c6 String)
(declare-const c7 String)
(declare-const c8 String)
(declare-const c9 String)
(declare-const c10 String)
(declare-const c11 String)
(declare-const c12 String)
(declare-const c13 String)
(declare-const c14 String)
(assert (= z (str.++ (str.++ (str.++ c14 c13) x) (str.++ c12 (str.++ c11 (str.++ c10 (str.++ (str.++ c9 c8) (str.++ c7 (str.++ c6 (str.++ y (str.++ (str.++ c5 (str.++ c4 (str.++ c3 c2))) c1)))))))))))
(assert (= x (str.substr (str.substr z 0 (str.len (str.++ (str.++ c14 c13) x))) (str.indexof (str.substr z 0 (str.len (str.++ (str.++ c14 c13) x))) x (str.len (str.++ c14 c13))) (str.len x))))
(assert (= y (str.substr (str.substr (str.substr (str.replace (str.replace (str.substr (str.replace (str.substr z (str.indexof z (str.++ c12 (str.++ c11 (str.++ c10 (str.++ (str.++ c9 c8) (str.++ c7 (str.++ c6 (str.++ y (str.++ (str.++ c5 (str.++ c4 (str.++ c3 c2))) c1)))))))) (str.len (str.++ (str.++ c14 c13) x))) (str.len (str.++ c12 (str.++ c11 (str.++ c10 (str.++ (str.++ c9 c8) (str.++ c7 (str.++ c6 (str.++ y (str.++ (str.++ c5 (str.++ c4 (str.++ c3 c2))) c1)))))))))) c12 "") (str.len c11) (str.len (str.++ c10 (str.++ (str.++ c9 c8) (str.++ c7 (str.++ c6 (str.++ y (str.++ (str.++ c5 (str.++ c4 (str.++ c3 c2))) c1)))))))) c10 "") (str.++ c9 c8) "") (str.len c7) (str.len (str.++ c6 (str.++ y (str.++ (str.++ c5 (str.++ c4 (str.++ c3 c2))) c1))))) (str.indexof (str.substr (str.replace (str.replace (str.substr (str.replace (str.substr z (str.indexof z (str.++ c12 (str.++ c11 (str.++ c10 (str.++ (str.++ c9 c8) (str.++ c7 (str.++ c6 (str.++ y (str.++ (str.++ c5 (str.++ c4 (str.++ c3 c2))) c1)))))))) (str.len (str.++ (str.++ c14 c13) x))) (str.len (str.++ c12 (str.++ c11 (str.++ c10 (str.++ (str.++ c9 c8) (str.++ c7 (str.++ c6 (str.++ y (str.++ (str.++ c5 (str.++ c4 (str.++ c3 c2))) c1)))))))))) c12 "") (str.len c11) (str.len (str.++ c10 (str.++ (str.++ c9 c8) (str.++ c7 (str.++ c6 (str.++ y (str.++ (str.++ c5 (str.++ c4 (str.++ c3 c2))) c1)))))))) c10 "") (str.++ c9 c8) "") (str.len c7) (str.len (str.++ c6 (str.++ y (str.++ (str.++ c5 (str.++ c4 (str.++ c3 c2))) c1))))) (str.++ y (str.++ (str.++ c5 (str.++ c4 (str.++ c3 c2))) c1)) (str.len c6)) (str.len (str.++ y (str.++ (str.++ c5 (str.++ c4 (str.++ c3 c2))) c1)))) 0 (str.indexof (str.substr (str.substr (str.replace (str.replace (str.substr (str.replace (str.substr z (str.indexof z (str.++ c12 (str.++ c11 (str.++ c10 (str.++ (str.++ c9 c8) (str.++ c7 (str.++ c6 (str.++ y (str.++ (str.++ c5 (str.++ c4 (str.++ c3 c2))) c1)))))))) (str.len (str.++ (str.++ c14 c13) x))) (str.len (str.++ c12 (str.++ c11 (str.++ c10 (str.++ (str.++ c9 c8) (str.++ c7 (str.++ c6 (str.++ y (str.++ (str.++ c5 (str.++ c4 (str.++ c3 c2))) c1)))))))))) c12 "") (str.len c11) (str.len (str.++ c10 (str.++ (str.++ c9 c8) (str.++ c7 (str.++ c6 (str.++ y (str.++ (str.++ c5 (str.++ c4 (str.++ c3 c2))) c1)))))))) c10 "") (str.++ c9 c8) "") (str.len c7) (str.len (str.++ c6 (str.++ y (str.++ (str.++ c5 (str.++ c4 (str.++ c3 c2))) c1))))) (str.indexof (str.substr (str.replace (str.replace (str.substr (str.replace (str.substr z (str.indexof z (str.++ c12 (str.++ c11 (str.++ c10 (str.++ (str.++ c9 c8) (str.++ c7 (str.++ c6 (str.++ y (str.++ (str.++ c5 (str.++ c4 (str.++ c3 c2))) c1)))))))) (str.len (str.++ (str.++ c14 c13) x))) (str.len (str.++ c12 (str.++ c11 (str.++ c10 (str.++ (str.++ c9 c8) (str.++ c7 (str.++ c6 (str.++ y (str.++ (str.++ c5 (str.++ c4 (str.++ c3 c2))) c1)))))))))) c12 "") (str.len c11) (str.len (str.++ c10 (str.++ (str.++ c9 c8) (str.++ c7 (str.++ c6 (str.++ y (str.++ (str.++ c5 (str.++ c4 (str.++ c3 c2))) c1)))))))) c10 "") (str.++ c9 c8) "") (str.len c7) (str.len (str.++ c6 (str.++ y (str.++ (str.++ c5 (str.++ c4 (str.++ c3 c2))) c1))))) (str.++ y (str.++ (str.++ c5 (str.++ c4 (str.++ c3 c2))) c1)) (str.len c6)) (str.len (str.++ y (str.++ (str.++ c5 (str.++ c4 (str.++ c3 c2))) c1)))) (str.++ (str.++ c5 (str.++ c4 (str.++ c3 c2))) c1) (str.len y)))))
#end

#begin
(declare-const x String)
(declare-const y String)
(declare-const z String)
(declare-const c1 String)
(declare-const c2 String)
(declare-const c3 String)
(declare-const c4 String)
(declare-const c5 String)
(declare-const c6 String)
(declare-const c7 String)
(declare-const c8 String)
(declare-const c9 String)
(declare-const c10 String)
(declare-const c11 String)
(declare-const c12 String)
(declare-const c13 String)
(declare-const c14 String)
(assert (= z (str.++ (str.++ (str.++ (str.++ c14 c13) (str.++ (str.++ (str.++ c12 c11) (str.++ c10 c9)) c8)) x) (str.++ c7 (str.++ c6 (str.++ (str.++ (str.++ (str.++ c5 c4) y) (str.++ c3 c2)) c1))))))
(assert (= x (str.substr (str.substr z 0 (str.len (str.++ (str.++ (str.++ c14 c13) (str.++ (str.++ (str.++ c12 c11) (str.++ c10 c9)) c8)) x))) (str.len (str.++ (str.++ c14 c13) (str.++ (str.++ (str.++ c12 c11) (str.++ c10 c9)) c8))) (str.len x))))
(assert (= y (str.substr (str.substr (str.substr (str.substr (str.replace (str.substr z (str.indexof z (str.++ c7 (str.++ c6 (str.++ (str.++ (str.++ (str.++ c5 c4) y) (str.++ c3 c2)) c1))) (str.len (str.++ (str.++ (str.++ c14 c13) (str.++ (str.++ (str.++ c12 c11) (str.++ c10 c9)) c8)) x))) (str.len (str.++ c7 (str.++ c6 (str.++ (str.++ (str.++ (str.++ c5 c4) y) (str.++ c3 c2)) c1))))) c7 "") (str.len c6) (str.len (str.++ (str.++ (str.++ (str.++ c5 c4) y) (str.++ c3 c2)) c1))) 0 (str.len (str.++ (str.++ (str.++ c5 c4) y) (str.++ c3 c2)))) 0 (str.len (str.++ (str.++ c5 c4) y))) (str.len (str.++ c5 c4)) (str.len y))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(declare-const c12 Int)
(declare-const c13 Int)
(declare-const c14 Int)
(assert (= z (- c14 (+ (* c13 (* (- c12 c11) (* c10 c9))) (* c8 (* (+ (- c7 c6) (+ (* (+ (+ c5 (* x y)) c4) c3) c2)) c1))))))
(assert (= x (div (- (- (div (- (- (div (div (- (- c14 z) (* c13 (* (- c12 c11) (* c10 c9)))) c8) c1) (- c7 c6)) c2) c3) c4) c5) y)))
(assert (= y (div (- (- (div (- (- (div (div (- (- c14 z) (* c13 (* (- c12 c11) (* c10 c9)))) c8) c1) (- c7 c6)) c2) c3) c4) c5) x)))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(declare-const c12 Real)
(declare-const c13 Real)
(declare-const c14 Real)
(assert (= z (* x (- (* c14 c13) (+ (+ c12 c11) (- c10 (+ c9 (+ (- (- c8 (- c7 (* (+ c6 c5) (* (+ c4 c3) c2)))) y) c1))))))))
(assert (= x (/ z (- (* c14 c13) (+ (+ c12 c11) (- c10 (+ c9 (+ (- (- c8 (- c7 (* (+ c6 c5) (* (+ c4 c3) c2)))) y) c1))))))))
(assert (= y (- (- c8 (- c7 (* (+ c6 c5) (* (+ c4 c3) c2)))) (- (- (- c10 (- (- (* c14 c13) (/ z x)) (+ c12 c11))) c9) c1))))
#end

#begin
(declare-const x String)
(declare-const y String)
(declare-const z String)
(declare-const c1 String)
(declare-const c2 String)
(declare-const c3 String)
(declare-const c4 String)
(declare-const c5 String)
(declare-const c6 String)
(declare-const c7 String)
(declare-const c8 String)
(declare-const c9 String)
(declare-const c10 String)
(declare-const c11 String)
(declare-const c12 String)
(declare-const c13 String)
(declare-const c14 String)
(assert (= z (str.++ c14 (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))))))
(assert (= x (str.replace (str.substr (str.substr (str.substr (str.replace (str.substr (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))))) (str.indexof (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))))) (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))) (str.len c13)) (str.len (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))))) c12 "") (str.len c11) (str.len (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))) 0 (str.len (str.++ (str.++ c10 x) c9))) 0 (str.indexof (str.substr (str.substr (str.replace (str.substr (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))))) (str.indexof (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))))) (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))) (str.len c13)) (str.len (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))))) c12 "") (str.len c11) (str.len (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))) 0 (str.len (str.++ (str.++ c10 x) c9))) c9 (str.len (str.++ c10 x)))) c10 "")))
(assert (= y (str.substr (str.substr (str.substr (str.substr (str.substr (str.substr (str.replace (str.substr (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))))) (str.indexof (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))))) (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))) (str.len c13)) (str.len (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))))) c12 "") (str.len c11) (str.len (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))) (str.len (str.++ (str.++ c10 x) c9)) (str.len (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))) 0 (str.indexof (str.substr (str.substr (str.replace (str.substr (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))))) (str.indexof (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))))) (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))) (str.len c13)) (str.len (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))))) c12 "") (str.len c11) (str.len (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))) (str.len (str.++ (str.++ c10 x) c9)) (str.len (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))) c1 (str.len (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2)))) 0 (str.indexof (str.substr (str.substr (str.substr (str.replace (str.substr (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))))) (str.indexof (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))))) (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))) (str.len c13)) (str.len (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))))) c12 "") (str.len c11) (str.len (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))) (str.len (str.++ (str.++ c10 x) c9)) (str.len (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))) 0 (str.indexof (str.substr (str.substr (str.replace (str.substr (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))))) (str.indexof (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))))) (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))) (str.len c13)) (str.len (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))))) c12 "") (str.len c11) (str.len (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))) (str.len (str.++ (str.++ c10 x) c9)) (str.len (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))) c1 (str.len (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2)))) c2 (str.len (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y))))) (str.len c8) (str.len (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y))) (str.indexof (str.substr (str.substr (str.substr (str.substr (str.substr (str.replace (str.substr (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))))) (str.indexof (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))))) (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))) (str.len c13)) (str.len (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))))) c12 "") (str.len c11) (str.len (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))) (str.len (str.++ (str.++ c10 x) c9)) (str.len (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))) 0 (str.indexof (str.substr (str.substr (str.replace (str.substr (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))))) (str.indexof (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))))) (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))) (str.len c13)) (str.len (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))))) c12 "") (str.len c11) (str.len (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))) (str.len (str.++ (str.++ c10 x) c9)) (str.len (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))) c1 (str.len (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2)))) 0 (str.indexof (str.substr (str.substr (str.substr (str.replace (str.substr (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))))) (str.indexof (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))))) (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))) (str.len c13)) (str.len (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))))) c12 "") (str.len c11) (str.len (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))) (str.len (str.++ (str.++ c10 x) c9)) (str.len (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))) 0 (str.indexof (str.substr (str.substr (str.replace (str.substr (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))))) (str.indexof (str.substr z (str.indexof z (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))) (str.len c14)) (str.len (str.++ c13 (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))))))) (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))) (str.len c13)) (str.len (str.++ c12 (str.++ c11 (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))))) c12 "") (str.len c11) (str.len (str.++ (str.++ (str.++ c10 x) c9) (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1)))) (str.len (str.++ (str.++ c10 x) c9)) (str.len (str.++ (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2) c1))) c1 (str.len (str.++ (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y)) c2)))) c2 (str.len (str.++ c8 (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y))))) (str.len c8) (str.len (str.++ (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3) y))) y (str.len (str.++ (str.++ (str.++ (str.++ c7 c6) c5) c4) c3))) (str.len y))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(assert (= z (xor c8 (xor (not (not (xor (xor (xor (not (not (not (xor (not c7) c6)))) (xor (not (xor (not (not x)) c5)) (not c4))) c3) (not (xor y c2))))) c1))))
(assert (= x (not (not (xor c5 (not (xor (not c4) (xor (not (not (not (xor (not c7) c6)))) (xor c3 (xor (not (xor y c2)) (not (not (xor c1 (xor c8 z))))))))))))))
(assert (= y (xor c2 (not (xor (xor (xor (not (not (not (xor (not c7) c6)))) (xor (not (xor (not (not x)) c5)) (not c4))) c3) (not (not (xor c1 (xor c8 z)))))))))
#end

#begin
(declare-const x String)
(declare-const y String)
(declare-const z String)
(declare-const c1 String)
(declare-const c2 String)
(declare-const c3 String)
(declare-const c4 String)
(declare-const c5 String)
(declare-const c6 String)
(declare-const c7 String)
(declare-const c8 String)
(declare-const c9 String)
(declare-const c10 String)
(declare-const c11 String)
(declare-const c12 String)
(declare-const c13 String)
(declare-const c14 String)
(assert (= z (str.++ c14 (str.++ x (str.++ c13 (str.++ c12 (str.++ (str.++ c11 (str.++ c10 (str.++ c9 c8))) (str.++ (str.++ c7 c6) (str.++ c5 (str.++ c4 (str.++ y (str.++ c3 (str.++ c2 c1)))))))))))))
(assert (= x (str.substr (str.substr z (str.indexof z (str.++ x (str.++ c13 (str.++ c12 (str.++ (str.++ c11 (str.++ c10 (str.++ c9 c8))) (str.++ (str.++ c7 c6) (str.++ c5 (str.++ c4 (str.++ y (str.++ c3 (str.++ c2 c1)))))))))) (str.len c14)) (str.len (str.++ x (str.++ c13 (str.++ c12 (str.++ (str.++ c11 (str.++ c10 (str.++ c9 c8))) (str.++ (str.++ c7 c6) (str.++ c5 (str.++ c4 (str.++ y (str.++ c3 (str.++ c2 c1)))))))))))) 0 (str.indexof (str.substr z (str.indexof z (str.++ x (str.++ c13 (str.++ c12 (str.++ (str.++ c11 (str.++ c10 (str.++ c9 c8))) (str.++ (str.++ c7 c6) (str.++ c5 (str.++ c4 (str.++ y (str.++ c3 (str.++ c2 c1)))))))))) (str.len c14)) (str.len (str.++ x (str.++ c13 (str.++ c12 (str.++ (str.++ c11 (str.++ c10 (str.++ c9 c8))) (str.++ (str.++ c7 c6) (str.++ c5 (str.++ c4 (str.++ y (str.++ c3 (str.++ c2 c1)))))))))))) (str.++ c13 (str.++ c12 (str.++ (str.++ c11 (str.++ c10 (str.++ c9 c8))) (str.++ (str.++ c7 c6) (str.++ c5 (str.++ c4 (str.++ y (str.++ c3 (str.++ c2 c1))))))))) (str.len x)))))
(assert (= y (str.substr (str.replace (str.substr (str.replace (str.substr (str.replace (str.substr (str.replace (str.substr z (str.indexof z (str.++ x (str.++ c13 (str.++ c12 (str.++ (str.++ c11 (str.++ c10 (str.++ c9 c8))) (str.++ (str.++ c7 c6) (str.++ c5 (str.++ c4 (str.++ y (str.++ c3 (str.++ c2 c1)))))))))) (str.len c14)) (str.len (str.++ x (str.++ c13 (str.++ c12 (str.++ (str.++ c11 (str.++ c10 (str.++ c9 c8))) (str.++ (str.++ c7 c6) (str.++ c5 (str.++ c4 (str.++ y (str.++ c3 (str.++ c2 c1)))))))))))) x "") (str.len c13) (str.len (str.++ c12 (str.++ (str.++ c11 (str.++ c10 (str.++ c9 c8))) (str.++ (str.++ c7 c6) (str.++ c5 (str.++ c4 (str.++ y (str.++ c3 (str.++ c2 c1)))))))))) c12 "") (str.len (str.++ c11 (str.++ c10 (str.++ c9 c8)))) (str.len (str.++ (str.++ c7 c6) (str.++ c5 (str.++ c4 (str.++ y (str.++ c3 (str.++ c2 c1)))))))) (str.++ c7 c6) "") (str.indexof (str.replace (str.substr (str.replace (str.substr (str.replace (str.substr z (str.indexof z (str.++ x (str.++ c13 (str.++ c12 (str.++ (str.++ c11 (str.++ c10 (str.++ c9 c8))) (str.++ (str.++ c7 c6) (str.++ c5 (str.++ c4 (str.++ y (str.++ c3 (str.++ c2 c1)))))))))) (str.len c14)) (str.len (str.++ x (str.++ c13 (str.++ c12 (str.++ (str.++ c11 (str.++ c10 (str.++ c9 c8))) (str.++ (str.++ c7 c6) (str.++ c5 (str.++ c4 (str.++ y (str.++ c3 (str.++ c2 c1)))))))))))) x "") (str.len c13) (str.len (str.++ c12 (str.++ (str.++ c11 (str.++ c10 (str.++ c9 c8))) (str.++ (str.++ c7 c6) (str.++ c5 (str.++ c4 (str.++ y (str.++ c3 (str.++ c2 c1)))))))))) c12 "") (str.len (str.++ c11 (str.++ c10 (str.++ c9 c8)))) (str.len (str.++ (str.++ c7 c6) (str.++ c5 (str.++ c4 (str.++ y (str.++ c3 (str.++ c2 c1)))))))) (str.++ c7 c6) "") (str.++ c4 (str.++ y (str.++ c3 (str.++ c2 c1)))) (str.len c5)) (str.len (str.++ c4 (str.++ y (str.++ c3 (str.++ c2 c1)))))) c4 "") 0 (str.len y))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(declare-const c9 Bool)
(assert (= z (xor (not (xor c9 c8)) (xor (xor (not (xor (xor (not (xor (xor c7 x) (xor c6 (not (not (not (xor (not (not c5)) c4))))))) (not c3)) c2)) y) c1))))
(assert (= x (xor c7 (xor (xor c6 (not (not (not (xor (not (not c5)) c4))))) (not (xor (not c3) (xor c2 (not (xor y (xor c1 (xor (not (xor c9 c8)) z)))))))))))
(assert (= y (xor (not (xor (xor (not (xor (xor c7 x) (xor c6 (not (not (not (xor (not (not c5)) c4))))))) (not c3)) c2)) (xor c1 (xor (not (xor c9 c8)) z)))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(declare-const c12 Int)
(declare-const c13 Int)
(declare-const c14 Int)
(assert (= z (* (+ c14 (+ c13 (* (- c12 (* (* c11 c10) (- (+ c9 (* (* (* c8 x) c7) c6)) (- c5 c4)))) c3))) (- (+ y c2) c1))))
(assert (= x (div (div (div (- (+ (div (- c12 (div (- (- (div z (- (+ y c2) c1)) c14) c13) c3)) (* c11 c10)) (- c5 c4)) c9) c6) c7) c8)))
(assert (= y (- (+ (div z (+ c14 (+ c13 (* (- c12 (* (* c11 c10) (- (+ c9 (* (* (* c8 x) c7) c6)) (- c5 c4)))) c3)))) c1) c2)))
#end

#begin
(declare-const x String)
(declare-const y String)
(declare-const z String)
(declare-const c1 String)
(declare-const c2 String)
(declare-const c3 String)
(declare-const c4 String)
(declare-const c5 String)
(declare-const c6 String)
(declare-const c7 String)
(declare-const c8 String)
(declare-const c9 String)
(declare-const c10 String)
(declare-const c11 String)
(declare-const c12 String)
(declare-const c13 String)
(declare-const c14 String)
(assert (= z (str.++ c14 (str.++ (str.++ c13 c12) (str.++ x (str.++ (str.++ y (str.++ (str.++ (str.++ c11 c10) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ (str.++ c6 c5) c4) c3))))) c2)) c1))))))
(assert (= x (str.substr (str.substr (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ x (str.++ (str.++ y (str.++ (str.++ (str.++ c11 c10) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ (str.++ c6 c5) c4) c3))))) c2)) c1))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ x (str.++ (str.++ y (str.++ (str.++ (str.++ c11 c10) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ (str.++ c6 c5) c4) c3))))) c2)) c1))))) (str.indexof (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ x (str.++ (str.++ y (str.++ (str.++ (str.++ c11 c10) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ (str.++ c6 c5) c4) c3))))) c2)) c1))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ x (str.++ (str.++ y (str.++ (str.++ (str.++ c11 c10) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ (str.++ c6 c5) c4) c3))))) c2)) c1))))) (str.++ x (str.++ (str.++ y (str.++ (str.++ (str.++ c11 c10) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ (str.++ c6 c5) c4) c3))))) c2)) c1)) (str.len (str.++ c13 c12))) (str.len (str.++ x (str.++ (str.++ y (str.++ (str.++ (str.++ c11 c10) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ (str.++ c6 c5) c4) c3))))) c2)) c1)))) 0 (str.len x))))
(assert (= y (str.substr (str.substr (str.substr (str.substr (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ x (str.++ (str.++ y (str.++ (str.++ (str.++ c11 c10) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ (str.++ c6 c5) c4) c3))))) c2)) c1))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ x (str.++ (str.++ y (str.++ (str.++ (str.++ c11 c10) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ (str.++ c6 c5) c4) c3))))) c2)) c1))))) (str.indexof (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ x (str.++ (str.++ y (str.++ (str.++ (str.++ c11 c10) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ (str.++ c6 c5) c4) c3))))) c2)) c1))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ x (str.++ (str.++ y (str.++ (str.++ (str.++ c11 c10) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ (str.++ c6 c5) c4) c3))))) c2)) c1))))) (str.++ x (str.++ (str.++ y (str.++ (str.++ (str.++ c11 c10) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ (str.++ c6 c5) c4) c3))))) c2)) c1)) (str.len (str.++ c13 c12))) (str.len (str.++ x (str.++ (str.++ y (str.++ (str.++ (str.++ c11 c10) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ (str.++ c6 c5) c4) c3))))) c2)) c1)))) (str.len x) (str.len (str.++ (str.++ y (str.++ (str.++ (str.++ c11 c10) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ (str.++ c6 c5) c4) c3))))) c2)) c1))) 0 (str.len (str.++ y (str.++ (str.++ (str.++ c11 c10) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ (str.++ c6 c5) c4) c3))))) c2)))) 0 (str.indexof (str.substr (str.substr (str.substr (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ x (str.++ (str.++ y (str.++ (str.++ (str.++ c11 c10) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ (str.++ c6 c5) c4) c3))))) c2)) c1))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ x (str.++ (str.++ y (str.++ (str.++ (str.++ c11 c10) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ (str.++ c6 c5) c4) c3))))) c2)) c1))))) (str.indexof (str.substr z (str.indexof z (str.++ (str.++ c13 c12) (str.++ x (str.++ (str.++ y (str.++ (str.++ (str.++ c11 c10) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ (str.++ c6 c5) c4) c3))))) c2)) c1))) (str.len c14)) (str.len (str.++ (str.++ c13 c12) (str.++ x (str.++ (str.++ y (str.++ (str.++ (str.++ c11 c10) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ (str.++ c6 c5) c4) c3))))) c2)) c1))))) (str.++ x (str.++ (str.++ y (str.++ (str.++ (str.++ c11 c10) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ (str.++ c6 c5) c4) c3))))) c2)) c1)) (str.len (str.++ c13 c12))) (str.len (str.++ x (str.++ (str.++ y (str.++ (str.++ (str.++ c11 c10) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ (str.++ c6 c5) c4) c3))))) c2)) c1)))) (str.len x) (str.len (str.++ (str.++ y (str.++ (str.++ (str.++ c11 c10) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ (str.++ c6 c5) c4) c3))))) c2)) c1))) 0 (str.len (str.++ y (str.++ (str.++ (str.++ c11 c10) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ (str.++ c6 c5) c4) c3))))) c2)))) (str.++ (str.++ (str.++ c11 c10) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ (str.++ c6 c5) c4) c3))))) c2) (str.len y)))))
#end

#begin
(declare-const x String)
(declare-const y String)
(declare-const z String)
(declare-const c1 String)
(declare-const c2 String)
(declare-const c3 String)
(declare-const c4 String)
(declare-const c5 String)
(declare-const c6 String)
(declare-const c7 String)
(declare-const c8 String)
(declare-const c9 String)
(declare-const c10 String)
(declare-const c11 String)
(declare-const c12 String)
(declare-const c13 String)
(declare-const c14 String)
(assert (= z (str.++ c14 (str.++ c13 (str.++ c12 (str.++ (str.++ c11 (str.++ x (str.++ c10 (str.++ (str.++ c9 y) (str.++ (str.++ (str.++ c8 c7) (str.++ (str.++ c6 (str.++ c5 c4)) c3)) c2))))) c1))))))
(assert (= x (str.substr (str.substr (str.substr (str.substr (str.substr (str.replace z c14 "") (str.len c13) (str.len (str.++ c12 (str.++ (str.++ c11 (str.++ x (str.++ c10 (str.++ (str.++ c9 y) (str.++ (str.++ (str.++ c8 c7) (str.++ (str.++ c6 (str.++ c5 c4)) c3)) c2))))) c1)))) (str.indexof (str.substr (str.replace z c14 "") (str.len c13) (str.len (str.++ c12 (str.++ (str.++ c11 (str.++ x (str.++ c10 (str.++ (str.++ c9 y) (str.++ (str.++ (str.++ c8 c7) (str.++ (str.++ c6 (str.++ c5 c4)) c3)) c2))))) c1)))) (str.++ (str.++ c11 (str.++ x (str.++ c10 (str.++ (str.++ c9 y) (str.++ (str.++ (str.++ c8 c7) (str.++ (str.++ c6 (str.++ c5 c4)) c3)) c2))))) c1) (str.len c12)) (str.len (str.++ (str.++ c11 (str.++ x (str.++ c10 (str.++ (str.++ c9 y) (str.++ (str.++ (str.++ c8 c7) (str.++ (str.++ c6 (str.++ c5 c4)) c3)) c2))))) c1))) 0 (str.indexof (str.substr (str.substr (str.replace z c14 "") (str.len c13) (str.len (str.++ c12 (str.++ (str.++ c11 (str.++ x (str.++ c10 (str.++ (str.++ c9 y) (str.++ (str.++ (str.++ c8 c7) (str.++ (str.++ c6 (str.++ c5 c4)) c3)) c2))))) c1)))) (str.indexof (str.substr (str.replace z c14 "") (str.len c13) (str.len (str.++ c12 (str.++ (str.++ c11 (str.++ x (str.++ c10 (str.++ (str.++ c9 y) (str.++ (str.++ (str.++ c8 c7) (str.++ (str.++ c6 (str.++ c5 c4)) c3)) c2))))) c1)))) (str.++ (str.++ c11 (str.++ x (str.++ c10 (str.++ (str.++ c9 y) (str.++ (str.++ (str.++ c8 c7) (str.++ (str.++ c6 (str.++ c5 c4)) c3)) c2))))) c1) (str.len c12)) (str.len (str.++ (str.++ c11 (str.++ x (str.++ c10 (str.++ (str.++ c9 y) (str.++ (str.++ (str.++ c8 c7) (str.++ (str.++ c6 (str.++ c5 c4)) c3)) c2))))) c1))) c1 (str.len (str.++ c11 (str.++ x (str.++ c10 (str.++ (str.++ c9 y) (str.++ (str.++ (str.++ c8 c7) (str.++ (str.++ c6 (str.++ c5 c4)) c3)) c2)))))))) (str.len c11) (str.len (str.++ x (str.++ c10 (str.++ (str.++ c9 y) (str.++ (str.++ (str.++ c8 c7) (str.++ (str.++ c6 (str.++ c5 c4)) c3)) c2)))))) 0 (str.len x))))
(assert (= y (str.substr (str.substr (str.substr (str.replace (str.substr (str.substr (str.substr (str.substr (str.replace z c14 "") (str.len c13) (str.len (str.++ c12 (str.++ (str.++ c11 (str.++ x (str.++ c10 (str.++ (str.++ c9 y) (str.++ (str.++ (str.++ c8 c7) (str.++ (str.++ c6 (str.++ c5 c4)) c3)) c2))))) c1)))) (str.indexof (str.substr (str.replace z c14 "") (str.len c13) (str.len (str.++ c12 (str.++ (str.++ c11 (str.++ x (str.++ c10 (str.++ (str.++ c9 y) (str.++ (str.++ (str.++ c8 c7) (str.++ (str.++ c6 (str.++ c5 c4)) c3)) c2))))) c1)))) (str.++ (str.++ c11 (str.++ x (str.++ c10 (str.++ (str.++ c9 y) (str.++ (str.++ (str.++ c8 c7) (str.++ (str.++ c6 (str.++ c5 c4)) c3)) c2))))) c1) (str.len c12)) (str.len (str.++ (str.++ c11 (str.++ x (str.++ c10 (str.++ (str.++ c9 y) (str.++ (str.++ (str.++ c8 c7) (str.++ (str.++ c6 (str.++ c5 c4)) c3)) c2))))) c1))) 0 (str.indexof (str.substr (str.substr (str.replace z c14 "") (str.len c13) (str.len (str.++ c12 (str.++ (str.++ c11 (str.++ x (str.++ c10 (str.++ (str.++ c9 y) (str.++ (str.++ (str.++ c8 c7) (str.++ (str.++ c6 (str.++ c5 c4)) c3)) c2))))) c1)))) (str.indexof (str.substr (str.replace z c14 "") (str.len c13) (str.len (str.++ c12 (str.++ (str.++ c11 (str.++ x (str.++ c10 (str.++ (str.++ c9 y) (str.++ (str.++ (str.++ c8 c7) (str.++ (str.++ c6 (str.++ c5 c4)) c3)) c2))))) c1)))) (str.++ (str.++ c11 (str.++ x (str.++ c10 (str.++ (str.++ c9 y) (str.++ (str.++ (str.++ c8 c7) (str.++ (str.++ c6 (str.++ c5 c4)) c3)) c2))))) c1) (str.len c12)) (str.len (str.++ (str.++ c11 (str.++ x (str.++ c10 (str.++ (str.++ c9 y) (str.++ (str.++ (str.++ c8 c7) (str.++ (str.++ c6 (str.++ c5 c4)) c3)) c2))))) c1))) c1 (str.len (str.++ c11 (str.++ x (str.++ c10 (str.++ (str.++ c9 y) (str.++ (str.++ (str.++ c8 c7) (str.++ (str.++ c6 (str.++ c5 c4)) c3)) c2)))))))) (str.len c11) (str.len (str.++ x (str.++ c10 (str.++ (str.++ c9 y) (str.++ (str.++ (str.++ c8 c7) (str.++ (str.++ c6 (str.++ c5 c4)) c3)) c2)))))) x "") (str.len c10) (str.len (str.++ (str.++ c9 y) (str.++ (str.++ (str.++ c8 c7) (str.++ (str.++ c6 (str.++ c5 c4)) c3)) c2)))) 0 (str.len (str.++ c9 y))) (str.len c9) (str.len y))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(declare-const c12 Real)
(declare-const c13 Real)
(declare-const c14 Real)
(assert (= z (+ (- (+ x y) c14) (+ (+ (* (+ c13 (+ c12 (* c11 c10))) (* c9 (+ c8 c7))) c6) (+ c5 (* (+ c4 c3) (* c2 c1)))))))
(assert (= x (- (+ (- z (+ (+ (* (+ c13 (+ c12 (* c11 c10))) (* c9 (+ c8 c7))) c6) (+ c5 (* (+ c4 c3) (* c2 c1))))) c14) y)))
(assert (= y (- (+ (- z (+ (+ (* (+ c13 (+ c12 (* c11 c10))) (* c9 (+ c8 c7))) c6) (+ c5 (* (+ c4 c3) (* c2 c1))))) c14) x)))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(declare-const c9 Bool)
(declare-const c10 Bool)
(assert (= z (xor (xor (xor (not (not (not c10))) (not (xor (not (xor (xor (xor c9 c8) c7) (not (xor (not (xor (xor c6 c5) (xor x c4))) y)))) c3))) c2) c1)))
(assert (= x (xor c4 (xor (xor c6 c5) (not (xor y (not (xor (xor (xor c9 c8) c7) (not (xor c3 (not (xor (not (not (not c10))) (xor c2 (xor c1 z))))))))))))))
(assert (= y (xor (not (xor (xor c6 c5) (xor x c4))) (not (xor (xor (xor c9 c8) c7) (not (xor c3 (not (xor (not (not (not c10))) (xor c2 (xor c1 z)))))))))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(declare-const c9 Bool)
(assert (= z (not (xor c9 (xor (not c8) (not (not (not (xor (not c7) (xor (not (xor c6 (xor c5 x))) (xor (not (not c4)) (xor c3 (xor (xor c2 y) c1)))))))))))))
(assert (= x (xor c5 (xor c6 (not (xor (xor (not (not c4)) (xor c3 (xor (xor c2 y) c1))) (xor (not c7) (not (not (not (xor (not c8) (xor c9 (not z)))))))))))))
(assert (= y (xor c2 (xor c1 (xor c3 (xor (not (not c4)) (xor (not (xor c6 (xor c5 x))) (xor (not c7) (not (not (not (xor (not c8) (xor c9 (not z))))))))))))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(declare-const c12 Real)
(declare-const c13 Real)
(declare-const c14 Real)
(assert (= z (- x (+ (- c14 c13) (- c12 (* (- (* (- (* c11 c10) (* (+ (- (- y (* (- c9 c8) c7)) c6) c5) c4)) c3) c2) c1))))))
(assert (= x (+ z (+ (- c14 c13) (- c12 (* (- (* (- (* c11 c10) (* (+ (- (- y (* (- c9 c8) c7)) c6) c5) c4)) c3) c2) c1))))))
(assert (= y (+ (+ (- (/ (- (* c11 c10) (/ (+ (/ (- c12 (- (- x z) (- c14 c13))) c1) c2) c3)) c4) c5) c6) (* (- c9 c8) c7))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(assert (= z (not (not (not (not (not (not (xor (not (xor c7 x)) (not (xor (not (xor y c6)) (xor (xor c5 (not c4)) (not (xor c3 (not (xor (not c2) c1))))))))))))))))
(assert (= x (xor c7 (not (xor (not (xor (not (xor y c6)) (xor (xor c5 (not c4)) (not (xor c3 (not (xor (not c2) c1))))))) (not (not (not (not (not (not z)))))))))))
(assert (= y (xor c6 (not (xor (xor (xor c5 (not c4)) (not (xor c3 (not (xor (not c2) c1))))) (not (xor (not (xor c7 x)) (not (not (not (not (not (not z)))))))))))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(declare-const c9 Bool)
(declare-const c10 Bool)
(assert (= z (xor c10 (not (not (xor c9 (xor c8 (not (xor (xor (not c7) c6) (xor c5 (xor x (xor (not (xor (xor c4 (xor c3 (not y))) c2)) (not c1)))))))))))))
(assert (= x (xor (xor (not (xor (xor c4 (xor c3 (not y))) c2)) (not c1)) (xor c5 (xor (xor (not c7) c6) (not (xor c8 (xor c9 (not (not (xor c10 z)))))))))))
(assert (= y (not (xor c3 (xor c4 (xor c2 (not (xor (not c1) (xor x (xor c5 (xor (xor (not c7) c6) (not (xor c8 (xor c9 (not (not (xor c10 z)))))))))))))))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(assert (= z (xor (not x) (xor c8 (not (not (xor c7 (not (xor (not (not c6)) (not (not (xor c5 (not (xor c4 (xor (xor c3 c2) (not (not (xor y c1))))))))))))))))))
(assert (= x (not (xor (xor c8 (not (not (xor c7 (not (xor (not (not c6)) (not (not (xor c5 (not (xor c4 (xor (xor c3 c2) (not (not (xor y c1))))))))))))))) z))))
(assert (= y (xor c1 (not (not (xor (xor c3 c2) (xor c4 (not (xor c5 (not (not (xor (not (not c6)) (not (xor c7 (not (not (xor c8 (xor (not x) z))))))))))))))))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(assert (= z (xor c7 (not (not (xor x (xor c6 (not (xor c5 (not (not (not (xor (not y) (not (not (xor (not (not (not c4))) (xor (xor c3 (not c2)) c1)))))))))))))))))
(assert (= x (xor (xor c6 (not (xor c5 (not (not (not (xor (not y) (not (not (xor (not (not (not c4))) (xor (xor c3 (not c2)) c1))))))))))) (not (not (xor c7 z))))))
(assert (= y (not (xor (not (not (xor (not (not (not c4))) (xor (xor c3 (not c2)) c1)))) (not (not (not (xor c5 (not (xor c6 (xor x (not (not (xor c7 z))))))))))))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(declare-const c12 Real)
(declare-const c13 Real)
(declare-const c14 Real)
(assert (= z (+ c14 (+ (- (* (+ c13 (* c12 (+ (- (+ c11 (* (+ x (- c10 (* c9 (+ c8 (- c7 c6))))) c5)) y) c4))) c3) c2) c1))))
(assert (= x (- (/ (- (+ (- (/ (- (/ (+ (- (- z c14) c1) c2) c3) c13) c12) c4) y) c11) c5) (- c10 (* c9 (+ c8 (- c7 c6)))))))
(assert (= y (- (+ c11 (* (+ x (- c10 (* c9 (+ c8 (- c7 c6))))) c5)) (- (/ (- (/ (+ (- (- z c14) c1) c2) c3) c13) c12) c4))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(declare-const c9 Bool)
(assert (= z (not (xor (not (xor x c9)) (xor (not c8) (xor c7 (xor (not (not c6)) (xor (not (xor (xor c5 c4) y)) (not (xor c3 (xor (not c2) (not c1))))))))))))
(assert (= x (xor c9 (not (xor (xor (not c8) (xor c7 (xor (not (not c6)) (xor (not (xor (xor c5 c4) y)) (not (xor c3 (xor (not c2) (not c1)))))))) (not z))))))
(assert (= y (xor (xor c5 c4) (not (xor (not (xor c3 (xor (not c2) (not c1)))) (xor (not (not c6)) (xor c7 (xor (not c8) (xor (not (xor x c9)) (not z))))))))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(declare-const c9 Bool)
(declare-const c10 Bool)
(assert (= z (xor c10 (xor c9 (not (xor (xor (xor (not c8) (xor (xor (xor (xor x (xor c7 (not (xor c6 (not (not c5)))))) (not y)) c4) (not c3))) c2) c1))))))
(assert (= x (xor (xor c7 (not (xor c6 (not (not c5))))) (xor (not y) (xor c4 (xor (not c3) (xor (not c8) (xor c2 (xor c1 (not (xor c9 (xor c10 z))))))))))))
(assert (= y (not (xor (xor x (xor c7 (not (xor c6 (not (not c5)))))) (xor c4 (xor (not c3) (xor (not c8) (xor c2 (xor c1 (not (xor c9 (xor c10 z))))))))))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(declare-const c12 Int)
(declare-const c13 Int)
(declare-const c14 Int)
(assert (= z (+ c14 (+ c13 (* c12 (- c11 (- (* c10 c9) (* (- c8 (* (+ (+ x (+ (- y (+ c7 c6)) (- c5 c4))) c3) c2)) c1))))))))
(assert (= x (- (- (div (- c8 (div (- (* c10 c9) (- c11 (div (- (- z c14) c13) c12))) c1)) c2) c3) (+ (- y (+ c7 c6)) (- c5 c4)))))
(assert (= y (+ (- (- (- (div (- c8 (div (- (* c10 c9) (- c11 (div (- (- z c14) c13) c12))) c1)) c2) c3) x) (- c5 c4)) (+ c7 c6))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(declare-const c12 Real)
(declare-const c13 Real)
(declare-const c14 Real)
(assert (= z (* (+ c14 c13) (* (- (* (+ (* (* (- c12 c11) c10) c9) c8) c7) (+ (- (- (- x y) (- c6 (+ c5 c4))) c3) c2)) c1))))
(assert (= x (+ (+ (+ (- (- (* (+ (* (* (- c12 c11) c10) c9) c8) c7) (/ (/ z (+ c14 c13)) c1)) c2) c3) (- c6 (+ c5 c4))) y)))
(assert (= y (- x (+ (+ (- (- (* (+ (* (* (- c12 c11) c10) c9) c8) c7) (/ (/ z (+ c14 c13)) c1)) c2) c3) (- c6 (+ c5 c4))))))
#end

#begin
(declare-const x String)
(declare-const y String)
(declare-const z String)
(declare-const c1 String)
(declare-const c2 String)
(declare-const c3 String)
(declare-const c4 String)
(declare-const c5 String)
(declare-const c6 String)
(declare-const c7 String)
(declare-const c8 String)
(declare-const c9 String)
(declare-const c10 String)
(declare-const c11 String)
(declare-const c12 String)
(declare-const c13 String)
(declare-const c14 String)
(assert (= z (str.++ (str.++ c14 (str.++ c13 (str.++ (str.++ (str.++ c12 c11) c10) c9))) (str.++ c8 (str.++ (str.++ c7 (str.++ (str.++ c6 c5) (str.++ x (str.++ (str.++ c4 c3) c2)))) (str.++ y c1))))))
(assert (= x (str.substr (str.substr (str.substr (str.substr (str.replace (str.replace z (str.++ c14 (str.++ c13 (str.++ (str.++ (str.++ c12 c11) c10) c9))) "") c8 "") 0 (str.indexof (str.replace (str.replace z (str.++ c14 (str.++ c13 (str.++ (str.++ (str.++ c12 c11) c10) c9))) "") c8 "") (str.++ y c1) (str.len (str.++ c7 (str.++ (str.++ c6 c5) (str.++ x (str.++ (str.++ c4 c3) c2))))))) (str.len c7) (str.len (str.++ (str.++ c6 c5) (str.++ x (str.++ (str.++ c4 c3) c2))))) (str.indexof (str.substr (str.substr (str.replace (str.replace z (str.++ c14 (str.++ c13 (str.++ (str.++ (str.++ c12 c11) c10) c9))) "") c8 "") 0 (str.indexof (str.replace (str.replace z (str.++ c14 (str.++ c13 (str.++ (str.++ (str.++ c12 c11) c10) c9))) "") c8 "") (str.++ y c1) (str.len (str.++ c7 (str.++ (str.++ c6 c5) (str.++ x (str.++ (str.++ c4 c3) c2))))))) (str.len c7) (str.len (str.++ (str.++ c6 c5) (str.++ x (str.++ (str.++ c4 c3) c2))))) (str.++ x (str.++ (str.++ c4 c3) c2)) (str.len (str.++ c6 c5))) (str.len (str.++ x (str.++ (str.++ c4 c3) c2)))) 0 (str.indexof (str.substr (str.substr (str.substr (str.replace (str.replace z (str.++ c14 (str.++ c13 (str.++ (str.++ (str.++ c12 c11) c10) c9))) "") c8 "") 0 (str.indexof (str.replace (str.replace z (str.++ c14 (str.++ c13 (str.++ (str.++ (str.++ c12 c11) c10) c9))) "") c8 "") (str.++ y c1) (str.len (str.++ c7 (str.++ (str.++ c6 c5) (str.++ x (str.++ (str.++ c4 c3) c2))))))) (str.len c7) (str.len (str.++ (str.++ c6 c5) (str.++ x (str.++ (str.++ c4 c3) c2))))) (str.indexof (str.substr (str.substr (str.replace (str.replace z (str.++ c14 (str.++ c13 (str.++ (str.++ (str.++ c12 c11) c10) c9))) "") c8 "") 0 (str.indexof (str.replace (str.replace z (str.++ c14 (str.++ c13 (str.++ (str.++ (str.++ c12 c11) c10) c9))) "") c8 "") (str.++ y c1) (str.len (str.++ c7 (str.++ (str.++ c6 c5) (str.++ x (str.++ (str.++ c4 c3) c2))))))) (str.len c7) (str.len (str.++ (str.++ c6 c5) (str.++ x (str.++ (str.++ c4 c3) c2))))) (str.++ x (str.++ (str.++ c4 c3) c2)) (str.len (str.++ c6 c5))) (str.len (str.++ x (str.++ (str.++ c4 c3) c2)))) (str.++ (str.++ c4 c3) c2) (str.len x)))))
(assert (= y (str.substr (str.substr (str.replace (str.replace z (str.++ c14 (str.++ c13 (str.++ (str.++ (str.++ c12 c11) c10) c9))) "") c8 "") (str.indexof (str.replace (str.replace z (str.++ c14 (str.++ c13 (str.++ (str.++ (str.++ c12 c11) c10) c9))) "") c8 "") (str.++ y c1) (str.len (str.++ c7 (str.++ (str.++ c6 c5) (str.++ x (str.++ (str.++ c4 c3) c2)))))) (str.len (str.++ y c1))) 0 (str.indexof (str.substr (str.replace (str.replace z (str.++ c14 (str.++ c13 (str.++ (str.++ (str.++ c12 c11) c10) c9))) "") c8 "") (str.indexof (str.replace (str.replace z (str.++ c14 (str.++ c13 (str.++ (str.++ (str.++ c12 c11) c10) c9))) "") c8 "") (str.++ y c1) (str.len (str.++ c7 (str.++ (str.++ c6 c5) (str.++ x (str.++ (str.++ c4 c3) c2)))))) (str.len (str.++ y c1))) c1 (str.len y)))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(assert (= z (not (not (xor c8 (xor (not c7) (xor c6 (xor c5 (not (not (not (not (xor c4 (xor (not c3) (xor x (not (xor (not (not c2)) (xor c1 y))))))))))))))))))
(assert (= x (xor (not (xor (not (not c2)) (xor c1 y))) (xor (not c3) (xor c4 (not (not (not (not (xor c5 (xor c6 (xor (not c7) (xor c8 (not (not z)))))))))))))))
(assert (= y (xor c1 (xor (not (not c2)) (not (xor x (xor (not c3) (xor c4 (not (not (not (not (xor c5 (xor c6 (xor (not c7) (xor c8 (not (not z))))))))))))))))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(declare-const c9 Bool)
(declare-const c10 Bool)
(declare-const c11 Bool)
(assert (= z (not (xor c11 (not (xor (not c10) (xor c9 (xor c8 (xor (xor c7 (xor (xor (not (xor (xor (xor c6 c5) (xor c4 c3)) c2)) x) c1)) (not y))))))))))
(assert (= x (xor (not (xor (xor (xor c6 c5) (xor c4 c3)) c2)) (xor c1 (xor c7 (xor (not y) (xor c8 (xor c9 (xor (not c10) (not (xor c11 (not z))))))))))))
(assert (= y (not (xor (xor c7 (xor (xor (not (xor (xor (xor c6 c5) (xor c4 c3)) c2)) x) c1)) (xor c8 (xor c9 (xor (not c10) (not (xor c11 (not z))))))))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(declare-const c12 Int)
(declare-const c13 Int)
(declare-const c14 Int)
(assert (= z (* (+ (+ c14 (- (+ c13 (- (* (- (* (* (* (* (+ (* x c12) c11) c10) (* c9 c8)) c7) c6) y) c5) c4)) c3)) c2) c1)))
(assert (= x (div (- (div (div (div (div (+ (div (+ (- (+ (- (- (div z c1) c2) c14) c3) c13) c4) c5) y) c6) c7) (* c9 c8)) c10) c11) c12)))
(assert (= y (- (* (* (* (* (+ (* x c12) c11) c10) (* c9 c8)) c7) c6) (div (+ (- (+ (- (- (div z c1) c2) c14) c3) c13) c4) c5))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(declare-const c12 Int)
(declare-const c13 Int)
(declare-const c14 Int)
(assert (= z (- (- (* c14 c13) (+ (* (+ c12 x) (* (+ (- (+ c11 c10) (* (- c9 c8) (* (- c7 (+ c6 y)) c5))) c4) c3)) c2)) c1)))
(assert (= x (- (div (- (- (* c14 c13) (+ z c1)) c2) (* (+ (- (+ c11 c10) (* (- c9 c8) (* (- c7 (+ c6 y)) c5))) c4) c3)) c12)))
(assert (= y (- (- c7 (div (div (- (+ c11 c10) (- (div (div (- (- (* c14 c13) (+ z c1)) c2) (+ c12 x)) c3) c4)) (- c9 c8)) c5)) c6)))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(declare-const c12 Int)
(declare-const c13 Int)
(declare-const c14 Int)
(assert (= z (* c14 (- c13 (+ c12 (* (+ c11 (+ (- (+ (* x (* (* c10 (- (+ c9 (+ (- c8 c7) c6)) c5)) c4)) c3) c2) c1)) y))))))
(assert (= x (div (- (+ (- (- (div (- (- c13 (div z c14)) c12) y) c11) c1) c2) c3) (* (* c10 (- (+ c9 (+ (- c8 c7) c6)) c5)) c4))))
(assert (= y (div (- (- c13 (div z c14)) c12) (+ c11 (+ (- (+ (* x (* (* c10 (- (+ c9 (+ (- c8 c7) c6)) c5)) c4)) c3) c2) c1)))))
#end

#begin
(declare-const x String)
(declare-const y String)
(declare-const z String)
(declare-const c1 String)
(declare-const c2 String)
(declare-const c3 String)
(declare-const c4 String)
(declare-const c5 String)
(declare-const c6 String)
(declare-const c7 String)
(declare-const c8 String)
(declare-const c9 String)
(declare-const c10 String)
(declare-const c11 String)
(declare-const c12 String)
(declare-const c13 String)
(declare-const c14 String)
(assert (= z (str.++ (str.++ c14 c13) (str.++ (str.++ c12 (str.++ c11 c10)) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ x c6) (str.++ c5 (str.++ c4 (str.++ c3 (str.++ (str.++ y c2) c1))))))))))))
(assert (= x (str.substr (str.substr (str.replace (str.substr (str.substr (str.replace (str.substr z (str.len (str.++ c14 c13)) (str.len (str.++ (str.++ c12 (str.++ c11 c10)) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ x c6) (str.++ c5 (str.++ c4 (str.++ c3 (str.++ (str.++ y c2) c1))))))))))) (str.++ c12 (str.++ c11 c10)) "") (str.len c9) (str.len (str.++ c8 (str.++ c7 (str.++ (str.++ x c6) (str.++ c5 (str.++ c4 (str.++ c3 (str.++ (str.++ y c2) c1))))))))) (str.len c8) (str.len (str.++ c7 (str.++ (str.++ x c6) (str.++ c5 (str.++ c4 (str.++ c3 (str.++ (str.++ y c2) c1)))))))) c7 "") 0 (str.indexof (str.replace (str.substr (str.substr (str.replace (str.substr z (str.len (str.++ c14 c13)) (str.len (str.++ (str.++ c12 (str.++ c11 c10)) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ x c6) (str.++ c5 (str.++ c4 (str.++ c3 (str.++ (str.++ y c2) c1))))))))))) (str.++ c12 (str.++ c11 c10)) "") (str.len c9) (str.len (str.++ c8 (str.++ c7 (str.++ (str.++ x c6) (str.++ c5 (str.++ c4 (str.++ c3 (str.++ (str.++ y c2) c1))))))))) (str.len c8) (str.len (str.++ c7 (str.++ (str.++ x c6) (str.++ c5 (str.++ c4 (str.++ c3 (str.++ (str.++ y c2) c1)))))))) c7 "") (str.++ c5 (str.++ c4 (str.++ c3 (str.++ (str.++ y c2) c1)))) (str.len (str.++ x c6)))) 0 (str.indexof (str.substr (str.replace (str.substr (str.substr (str.replace (str.substr z (str.len (str.++ c14 c13)) (str.len (str.++ (str.++ c12 (str.++ c11 c10)) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ x c6) (str.++ c5 (str.++ c4 (str.++ c3 (str.++ (str.++ y c2) c1))))))))))) (str.++ c12 (str.++ c11 c10)) "") (str.len c9) (str.len (str.++ c8 (str.++ c7 (str.++ (str.++ x c6) (str.++ c5 (str.++ c4 (str.++ c3 (str.++ (str.++ y c2) c1))))))))) (str.len c8) (str.len (str.++ c7 (str.++ (str.++ x c6) (str.++ c5 (str.++ c4 (str.++ c3 (str.++ (str.++ y c2) c1)))))))) c7 "") 0 (str.indexof (str.replace (str.substr (str.substr (str.replace (str.substr z (str.len (str.++ c14 c13)) (str.len (str.++ (str.++ c12 (str.++ c11 c10)) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ x c6) (str.++ c5 (str.++ c4 (str.++ c3 (str.++ (str.++ y c2) c1))))))))))) (str.++ c12 (str.++ c11 c10)) "") (str.len c9) (str.len (str.++ c8 (str.++ c7 (str.++ (str.++ x c6) (str.++ c5 (str.++ c4 (str.++ c3 (str.++ (str.++ y c2) c1))))))))) (str.len c8) (str.len (str.++ c7 (str.++ (str.++ x c6) (str.++ c5 (str.++ c4 (str.++ c3 (str.++ (str.++ y c2) c1)))))))) c7 "") (str.++ c5 (str.++ c4 (str.++ c3 (str.++ (str.++ y c2) c1)))) (str.len (str.++ x c6)))) c6 (str.len x)))))
(assert (= y (str.substr (str.substr (str.substr (str.replace (str.substr (str.substr (str.replace (str.substr (str.substr (str.replace (str.substr z (str.len (str.++ c14 c13)) (str.len (str.++ (str.++ c12 (str.++ c11 c10)) (str.++ c9 (str.++ c8 (str.++ c7 (str.++ (str.++ x c6) (str.++ c5 (str.++ c4 (str.++ c3 (str.++ (str.++ y c2) c1))))))))))) (str.++ c12 (str.++ c11 c10)) "") (str.len c9) (str.len (str.++ c8 (str.++ c7 (str.++ (str.++ x c6) (str.++ c5 (str.++ c4 (str.++ c3 (str.++ (str.++ y c2) c1))))))))) (str.len c8) (str.len (str.++ c7 (str.++ (str.++ x c6) (str.++ c5 (str.++ c4 (str.++ c3 (str.++ (str.++ y c2) c1)))))))) c7 "") (str.len (str.++ x c6)) (str.len (str.++ c5 (str.++ c4 (str.++ c3 (str.++ (str.++ y c2) c1)))))) (str.len c5) (str.len (str.++ c4 (str.++ c3 (str.++ (str.++ y c2) c1))))) c4 "") (str.len c3) (str.len (str.++ (str.++ y c2) c1))) 0 (str.len (str.++ y c2))) 0 (str.len y))))
#end

#begin
(declare-const x String)
(declare-const y String)
(declare-const z String)
(declare-const c1 String)
(declare-const c2 String)
(declare-const c3 String)
(declare-const c4 String)
(declare-const c5 String)
(declare-const c6 String)
(declare-const c7 String)
(declare-const c8 String)
(declare-const c9 String)
(declare-const c10 String)
(declare-const c11 String)
(declare-const c12 String)
(declare-const c13 String)
(declare-const c14 String)
(assert (= z (str.++ x (str.++ (str.++ c14 c13) (str.++ (str.++ c12 c11) (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))))))
(assert (= x (str.substr z 0 (str.indexof z (str.++ (str.++ c14 c13) (str.++ (str.++ c12 c11) (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))) (str.len x)))))
(assert (= y (str.substr (str.substr (str.substr (str.substr (str.substr (str.substr (str.substr (str.replace (str.substr z (str.indexof z (str.++ (str.++ c14 c13) (str.++ (str.++ c12 c11) (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))) (str.len x)) (str.len (str.++ (str.++ c14 c13) (str.++ (str.++ c12 c11) (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))))) (str.++ c14 c13) "") (str.len (str.++ c12 c11)) (str.len (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))) (str.indexof (str.substr (str.replace (str.substr z (str.indexof z (str.++ (str.++ c14 c13) (str.++ (str.++ c12 c11) (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))) (str.len x)) (str.len (str.++ (str.++ c14 c13) (str.++ (str.++ c12 c11) (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))))) (str.++ c14 c13) "") (str.len (str.++ c12 c11)) (str.len (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1)))))) (str.len (str.++ c10 (str.++ c9 c8)))) (str.len (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1)))))))) (str.indexof (str.substr (str.substr (str.replace (str.substr z (str.indexof z (str.++ (str.++ c14 c13) (str.++ (str.++ c12 c11) (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))) (str.len x)) (str.len (str.++ (str.++ c14 c13) (str.++ (str.++ c12 c11) (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))))) (str.++ c14 c13) "") (str.len (str.++ c12 c11)) (str.len (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))) (str.indexof (str.substr (str.replace (str.substr z (str.indexof z (str.++ (str.++ c14 c13) (str.++ (str.++ c12 c11) (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))) (str.len x)) (str.len (str.++ (str.++ c14 c13) (str.++ (str.++ c12 c11) (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))))) (str.++ c14 c13) "") (str.len (str.++ c12 c11)) (str.len (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1)))))) (str.len (str.++ c10 (str.++ c9 c8)))) (str.len (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1)))))))) (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))) (str.len c7)) (str.len (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))) (str.indexof (str.substr (str.substr (str.substr (str.replace (str.substr z (str.indexof z (str.++ (str.++ c14 c13) (str.++ (str.++ c12 c11) (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))) (str.len x)) (str.len (str.++ (str.++ c14 c13) (str.++ (str.++ c12 c11) (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))))) (str.++ c14 c13) "") (str.len (str.++ c12 c11)) (str.len (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))) (str.indexof (str.substr (str.replace (str.substr z (str.indexof z (str.++ (str.++ c14 c13) (str.++ (str.++ c12 c11) (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))) (str.len x)) (str.len (str.++ (str.++ c14 c13) (str.++ (str.++ c12 c11) (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))))) (str.++ c14 c13) "") (str.len (str.++ c12 c11)) (str.len (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1)))))) (str.len (str.++ c10 (str.++ c9 c8)))) (str.len (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1)))))))) (str.indexof (str.substr (str.substr (str.replace (str.substr z (str.indexof z (str.++ (str.++ c14 c13) (str.++ (str.++ c12 c11) (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))) (str.len x)) (str.len (str.++ (str.++ c14 c13) (str.++ (str.++ c12 c11) (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))))) (str.++ c14 c13) "") (str.len (str.++ c12 c11)) (str.len (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))) (str.indexof (str.substr (str.replace (str.substr z (str.indexof z (str.++ (str.++ c14 c13) (str.++ (str.++ c12 c11) (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))) (str.len x)) (str.len (str.++ (str.++ c14 c13) (str.++ (str.++ c12 c11) (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))))) (str.++ c14 c13) "") (str.len (str.++ c12 c11)) (str.len (str.++ (str.++ c10 (str.++ c9 c8)) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))))) (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1)))))) (str.len (str.++ c10 (str.++ c9 c8)))) (str.len (str.++ c7 (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1)))))))) (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))) (str.len c7)) (str.len (str.++ (str.++ c6 c5) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1))))))) (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1)))) (str.len (str.++ c6 c5))) (str.len (str.++ c4 (str.++ c3 (str.++ y (str.++ c2 c1)))))) (str.len c4) (str.len (str.++ c3 (str.++ y (str.++ c2 c1))))) (str.len c3) (str.len (str.++ y (str.++ c2 c1)))) 0 (str.len y))))
#end

#begin
(declare-const x String)
(declare-const y String)
(declare-const z String)
(declare-const c1 String)
(declare-const c2 String)
(declare-const c3 String)
(declare-const c4 String)
(declare-const c5 String)
(declare-const c6 String)
(declare-const c7 String)
(declare-const c8 String)
(declare-const c9 String)
(declare-const c10 String)
(declare-const c11 String)
(declare-const c12 String)
(declare-const c13 String)
(declare-const c14 String)
(assert (= z (str.++ (str.++ (str.++ (str.++ c14 c13) c12) (str.++ (str.++ (str.++ (str.++ c11 x) c10) c9) (str.++ y (str.++ c8 c7)))) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ (str.++ c3 c2) c1)))))))
(assert (= x (str.replace (str.substr (str.substr (str.substr (str.substr (str.substr z 0 (str.len (str.++ (str.++ (str.++ c14 c13) c12) (str.++ (str.++ (str.++ (str.++ c11 x) c10) c9) (str.++ y (str.++ c8 c7)))))) (str.len (str.++ (str.++ c14 c13) c12)) (str.len (str.++ (str.++ (str.++ (str.++ c11 x) c10) c9) (str.++ y (str.++ c8 c7))))) 0 (str.len (str.++ (str.++ (str.++ c11 x) c10) c9))) 0 (str.len (str.++ (str.++ c11 x) c10))) 0 (str.len (str.++ c11 x))) c11 "")))
(assert (= y (str.substr (str.replace (str.substr (str.substr z 0 (str.len (str.++ (str.++ (str.++ c14 c13) c12) (str.++ (str.++ (str.++ (str.++ c11 x) c10) c9) (str.++ y (str.++ c8 c7)))))) (str.len (str.++ (str.++ c14 c13) c12)) (str.len (str.++ (str.++ (str.++ (str.++ c11 x) c10) c9) (str.++ y (str.++ c8 c7))))) (str.++ (str.++ (str.++ c11 x) c10) c9) "") 0 (str.indexof (str.replace (str.substr (str.substr z 0 (str.len (str.++ (str.++ (str.++ c14 c13) c12) (str.++ (str.++ (str.++ (str.++ c11 x) c10) c9) (str.++ y (str.++ c8 c7)))))) (str.len (str.++ (str.++ c14 c13) c12)) (str.len (str.++ (str.++ (str.++ (str.++ c11 x) c10) c9) (str.++ y (str.++ c8 c7))))) (str.++ (str.++ (str.++ c11 x) c10) c9) "") (str.++ c8 c7) (str.len y)))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(declare-const c12 Int)
(declare-const c13 Int)
(declare-const c14 Int)
(assert (= z (+ (+ (* (* (+ (- c14 (- c13 (+ (- c12 c11) c10))) x) c9) (+ (- (- (+ (* (+ c8 c7) c6) c5) y) c4) c3)) c2) c1)))
(assert (= x (- (div (div (- (- z c1) c2) (+ (- (- (+ (* (+ c8 c7) c6) c5) y) c4) c3)) c9) (- c14 (- c13 (+ (- c12 c11) c10))))))
(assert (= y (- (+ (* (+ c8 c7) c6) c5) (+ (- (div (- (- z c1) c2) (* (+ (- c14 (- c13 (+ (- c12 c11) c10))) x) c9)) c3) c4))))
#end

#begin
(declare-const x String)
(declare-const y String)
(declare-const z String)
(declare-const c1 String)
(declare-const c2 String)
(declare-const c3 String)
(declare-const c4 String)
(declare-const c5 String)
(declare-const c6 String)
(declare-const c7 String)
(declare-const c8 String)
(declare-const c9 String)
(declare-const c10 String)
(declare-const c11 String)
(declare-const c12 String)
(declare-const c13 String)
(declare-const c14 String)
(assert (= z (str.++ (str.++ c14 (str.++ (str.++ c13 c12) x)) (str.++ c11 (str.++ c10 (str.++ c9 (str.++ c8 (str.++ (str.++ c7 (str.++ c6 (str.++ (str.++ (str.++ (str.++ c5 c4) c3) y) c2))) c1))))))))
(assert (= x (str.substr (str.replace (str.substr z 0 (str.len (str.++ c14 (str.++ (str.++ c13 c12) x)))) c14 "") (str.len (str.++ c13 c12)) (str.len x))))
(assert (= y (str.substr (str.substr (str.replace (str.replace (str.substr (str.substr (str.substr (str.replace (str.replace (str.substr z (str.indexof z (str.++ c11 (str.++ c10 (str.++ c9 (str.++ c8 (str.++ (str.++ c7 (str.++ c6 (str.++ (str.++ (str.++ (str.++ c5 c4) c3) y) c2))) c1))))) (str.len (str.++ c14 (str.++ (str.++ c13 c12) x)))) (str.len (str.++ c11 (str.++ c10 (str.++ c9 (str.++ c8 (str.++ (str.++ c7 (str.++ c6 (str.++ (str.++ (str.++ (str.++ c5 c4) c3) y) c2))) c1))))))) c11 "") c10 "") (str.indexof (str.replace (str.replace (str.substr z (str.indexof z (str.++ c11 (str.++ c10 (str.++ c9 (str.++ c8 (str.++ (str.++ c7 (str.++ c6 (str.++ (str.++ (str.++ (str.++ c5 c4) c3) y) c2))) c1))))) (str.len (str.++ c14 (str.++ (str.++ c13 c12) x)))) (str.len (str.++ c11 (str.++ c10 (str.++ c9 (str.++ c8 (str.++ (str.++ c7 (str.++ c6 (str.++ (str.++ (str.++ (str.++ c5 c4) c3) y) c2))) c1))))))) c11 "") c10 "") (str.++ c8 (str.++ (str.++ c7 (str.++ c6 (str.++ (str.++ (str.++ (str.++ c5 c4) c3) y) c2))) c1)) (str.len c9)) (str.len (str.++ c8 (str.++ (str.++ c7 (str.++ c6 (str.++ (str.++ (str.++ (str.++ c5 c4) c3) y) c2))) c1)))) (str.len c8) (str.len (str.++ (str.++ c7 (str.++ c6 (str.++ (str.++ (str.++ (str.++ c5 c4) c3) y) c2))) c1))) 0 (str.len (str.++ c7 (str.++ c6 (str.++ (str.++ (str.++ (str.++ c5 c4) c3) y) c2))))) c7 "") c6 "") 0 (str.len (str.++ (str.++ (str.++ c5 c4) c3) y))) (str.len (str.++ (str.++ c5 c4) c3)) (str.len y))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(assert (= z (xor c7 (not (not (not (not (xor c6 (not (not (xor (xor c5 x) (xor c4 (xor c3 (not (xor (not (not c2)) (not (not (xor (not (not c1)) y))))))))))))))))))
(assert (= x (xor c5 (xor (xor c4 (xor c3 (not (xor (not (not c2)) (not (not (xor (not (not c1)) y))))))) (not (not (xor c6 (not (not (not (not (xor c7 z))))))))))))
(assert (= y (xor (not (not c1)) (not (not (xor (not (not c2)) (not (xor c3 (xor c4 (xor (xor c5 x) (not (not (xor c6 (not (not (not (not (xor c7 z))))))))))))))))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(assert (= z (not (not (xor (not c8) (not (xor c7 (xor (xor c6 (xor c5 c4)) (xor (not c3) (not (not (xor x (xor c2 (not (not (not (not (xor c1 y))))))))))))))))))
(assert (= x (xor (xor c2 (not (not (not (not (xor c1 y)))))) (not (not (xor (not c3) (xor (xor c6 (xor c5 c4)) (xor c7 (not (xor (not c8) (not (not z))))))))))))
(assert (= y (xor c1 (not (not (not (not (xor c2 (xor x (not (not (xor (not c3) (xor (xor c6 (xor c5 c4)) (xor c7 (not (xor (not c8) (not (not z))))))))))))))))))
#end

#begin
(declare-const x String)
(declare-const y String)
(declare-const z String)
(declare-const c1 String)
(declare-const c2 String)
(declare-const c3 String)
(declare-const c4 String)
(declare-const c5 String)
(declare-const c6 String)
(declare-const c7 String)
(declare-const c8 String)
(declare-const c9 String)
(declare-const c10 String)
(declare-const c11 String)
(declare-const c12 String)
(declare-const c13 String)
(declare-const c14 String)
(assert (= z (str.++ (str.++ c14 (str.++ (str.++ c13 x) c12)) (str.++ c11 (str.++ c10 (str.++ c9 (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1)))))))))))))
(assert (= x (str.replace (str.substr (str.substr (str.substr z 0 (str.len (str.++ c14 (str.++ (str.++ c13 x) c12)))) (str.indexof (str.substr z 0 (str.len (str.++ c14 (str.++ (str.++ c13 x) c12)))) (str.++ (str.++ c13 x) c12) (str.len c14)) (str.len (str.++ (str.++ c13 x) c12))) 0 (str.len (str.++ c13 x))) c13 "")))
(assert (= y (str.substr (str.replace (str.substr (str.substr (str.substr (str.replace (str.substr (str.substr (str.replace (str.substr (str.substr z (str.len (str.++ c14 (str.++ (str.++ c13 x) c12))) (str.len (str.++ c11 (str.++ c10 (str.++ c9 (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1)))))))))))) (str.len c11) (str.len (str.++ c10 (str.++ c9 (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1))))))))))) c10 "") (str.indexof (str.replace (str.substr (str.substr z (str.len (str.++ c14 (str.++ (str.++ c13 x) c12))) (str.len (str.++ c11 (str.++ c10 (str.++ c9 (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1)))))))))))) (str.len c11) (str.len (str.++ c10 (str.++ c9 (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1))))))))))) c10 "") (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1))))))) (str.len c9)) (str.len (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1))))))))) (str.len (str.++ c8 c7)) (str.len (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1)))))))) c6 "") (str.len c5) (str.len (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1)))))) (str.indexof (str.substr (str.replace (str.substr (str.substr (str.replace (str.substr (str.substr z (str.len (str.++ c14 (str.++ (str.++ c13 x) c12))) (str.len (str.++ c11 (str.++ c10 (str.++ c9 (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1)))))))))))) (str.len c11) (str.len (str.++ c10 (str.++ c9 (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1))))))))))) c10 "") (str.indexof (str.replace (str.substr (str.substr z (str.len (str.++ c14 (str.++ (str.++ c13 x) c12))) (str.len (str.++ c11 (str.++ c10 (str.++ c9 (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1)))))))))))) (str.len c11) (str.len (str.++ c10 (str.++ c9 (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1))))))))))) c10 "") (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1))))))) (str.len c9)) (str.len (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1))))))))) (str.len (str.++ c8 c7)) (str.len (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1)))))))) c6 "") (str.len c5) (str.len (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1)))))) (str.++ c3 (str.++ c2 (str.++ y c1))) (str.len c4)) (str.len (str.++ c3 (str.++ c2 (str.++ y c1))))) (str.len c3) (str.len (str.++ c2 (str.++ y c1)))) c2 "") 0 (str.indexof (str.replace (str.substr (str.substr (str.substr (str.replace (str.substr (str.substr (str.replace (str.substr (str.substr z (str.len (str.++ c14 (str.++ (str.++ c13 x) c12))) (str.len (str.++ c11 (str.++ c10 (str.++ c9 (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1)))))))))))) (str.len c11) (str.len (str.++ c10 (str.++ c9 (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1))))))))))) c10 "") (str.indexof (str.replace (str.substr (str.substr z (str.len (str.++ c14 (str.++ (str.++ c13 x) c12))) (str.len (str.++ c11 (str.++ c10 (str.++ c9 (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1)))))))))))) (str.len c11) (str.len (str.++ c10 (str.++ c9 (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1))))))))))) c10 "") (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1))))))) (str.len c9)) (str.len (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1))))))))) (str.len (str.++ c8 c7)) (str.len (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1)))))))) c6 "") (str.len c5) (str.len (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1)))))) (str.indexof (str.substr (str.replace (str.substr (str.substr (str.replace (str.substr (str.substr z (str.len (str.++ c14 (str.++ (str.++ c13 x) c12))) (str.len (str.++ c11 (str.++ c10 (str.++ c9 (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1)))))))))))) (str.len c11) (str.len (str.++ c10 (str.++ c9 (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1))))))))))) c10 "") (str.indexof (str.replace (str.substr (str.substr z (str.len (str.++ c14 (str.++ (str.++ c13 x) c12))) (str.len (str.++ c11 (str.++ c10 (str.++ c9 (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1)))))))))))) (str.len c11) (str.len (str.++ c10 (str.++ c9 (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1))))))))))) c10 "") (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1))))))) (str.len c9)) (str.len (str.++ (str.++ c8 c7) (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1))))))))) (str.len (str.++ c8 c7)) (str.len (str.++ c6 (str.++ c5 (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1)))))))) c6 "") (str.len c5) (str.len (str.++ c4 (str.++ c3 (str.++ c2 (str.++ y c1)))))) (str.++ c3 (str.++ c2 (str.++ y c1))) (str.len c4)) (str.len (str.++ c3 (str.++ c2 (str.++ y c1))))) (str.len c3) (str.len (str.++ c2 (str.++ y c1)))) c2 "") c1 (str.len y)))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(declare-const c12 Int)
(declare-const c13 Int)
(declare-const c14 Int)
(assert (= z (* c14 (* (+ c13 c12) (+ c11 (- c10 (+ (+ c9 (+ c8 (+ (- c7 (+ (+ (+ (- (- c6 c5) c4) c3) x) y)) c2))) c1)))))))
(assert (= x (- (- (- c7 (- (- (- (- (- c10 (- (div (div z c14) (+ c13 c12)) c11)) c1) c9) c8) c2)) y) (+ (- (- c6 c5) c4) c3))))
(assert (= y (- (- c7 (- (- (- (- (- c10 (- (div (div z c14) (+ c13 c12)) c11)) c1) c9) c8) c2)) (+ (+ (- (- c6 c5) c4) c3) x))))
#end

#begin
(declare-const x String)
(declare-const y String)
(declare-const z String)
(declare-const c1 String)
(declare-const c2 String)
(declare-const c3 String)
(declare-const c4 String)
(declare-const c5 String)
(declare-const c6 String)
(declare-const c7 String)
(declare-const c8 String)
(declare-const c9 String)
(declare-const c10 String)
(declare-const c11 String)
(declare-const c12 String)
(declare-const c13 String)
(declare-const c14 String)
(assert (= z (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7) c6) (str.++ c5 (str.++ y (str.++ (str.++ c4 c3) (str.++ c2 c1)))))))
(assert (= x (str.substr (str.substr (str.substr (str.replace (str.substr (str.substr (str.substr (str.substr (str.substr z 0 (str.indexof z (str.++ c5 (str.++ y (str.++ (str.++ c4 c3) (str.++ c2 c1)))) (str.len (str.++ (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7) c6)))) 0 (str.len (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7))) 0 (str.indexof (str.substr (str.substr z 0 (str.indexof z (str.++ c5 (str.++ y (str.++ (str.++ c4 c3) (str.++ c2 c1)))) (str.len (str.++ (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7) c6)))) 0 (str.len (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7))) c7 (str.len (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8)))) 0 (str.indexof (str.substr (str.substr (str.substr z 0 (str.indexof z (str.++ c5 (str.++ y (str.++ (str.++ c4 c3) (str.++ c2 c1)))) (str.len (str.++ (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7) c6)))) 0 (str.len (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7))) 0 (str.indexof (str.substr (str.substr z 0 (str.indexof z (str.++ c5 (str.++ y (str.++ (str.++ c4 c3) (str.++ c2 c1)))) (str.len (str.++ (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7) c6)))) 0 (str.len (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7))) c7 (str.len (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8)))) c8 (str.len (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9))))) 0 (str.indexof (str.substr (str.substr (str.substr (str.substr z 0 (str.indexof z (str.++ c5 (str.++ y (str.++ (str.++ c4 c3) (str.++ c2 c1)))) (str.len (str.++ (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7) c6)))) 0 (str.len (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7))) 0 (str.indexof (str.substr (str.substr z 0 (str.indexof z (str.++ c5 (str.++ y (str.++ (str.++ c4 c3) (str.++ c2 c1)))) (str.len (str.++ (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7) c6)))) 0 (str.len (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7))) c7 (str.len (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8)))) 0 (str.indexof (str.substr (str.substr (str.substr z 0 (str.indexof z (str.++ c5 (str.++ y (str.++ (str.++ c4 c3) (str.++ c2 c1)))) (str.len (str.++ (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7) c6)))) 0 (str.len (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7))) 0 (str.indexof (str.substr (str.substr z 0 (str.indexof z (str.++ c5 (str.++ y (str.++ (str.++ c4 c3) (str.++ c2 c1)))) (str.len (str.++ (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7) c6)))) 0 (str.len (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7))) c7 (str.len (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8)))) c8 (str.len (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9))))) (str.++ c10 c9) (str.len (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11))))) c14 "") 0 (str.indexof (str.replace (str.substr (str.substr (str.substr (str.substr (str.substr z 0 (str.indexof z (str.++ c5 (str.++ y (str.++ (str.++ c4 c3) (str.++ c2 c1)))) (str.len (str.++ (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7) c6)))) 0 (str.len (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7))) 0 (str.indexof (str.substr (str.substr z 0 (str.indexof z (str.++ c5 (str.++ y (str.++ (str.++ c4 c3) (str.++ c2 c1)))) (str.len (str.++ (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7) c6)))) 0 (str.len (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7))) c7 (str.len (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8)))) 0 (str.indexof (str.substr (str.substr (str.substr z 0 (str.indexof z (str.++ c5 (str.++ y (str.++ (str.++ c4 c3) (str.++ c2 c1)))) (str.len (str.++ (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7) c6)))) 0 (str.len (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7))) 0 (str.indexof (str.substr (str.substr z 0 (str.indexof z (str.++ c5 (str.++ y (str.++ (str.++ c4 c3) (str.++ c2 c1)))) (str.len (str.++ (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7) c6)))) 0 (str.len (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7))) c7 (str.len (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8)))) c8 (str.len (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9))))) 0 (str.indexof (str.substr (str.substr (str.substr (str.substr z 0 (str.indexof z (str.++ c5 (str.++ y (str.++ (str.++ c4 c3) (str.++ c2 c1)))) (str.len (str.++ (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7) c6)))) 0 (str.len (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7))) 0 (str.indexof (str.substr (str.substr z 0 (str.indexof z (str.++ c5 (str.++ y (str.++ (str.++ c4 c3) (str.++ c2 c1)))) (str.len (str.++ (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7) c6)))) 0 (str.len (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7))) c7 (str.len (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8)))) 0 (str.indexof (str.substr (str.substr (str.substr z 0 (str.indexof z (str.++ c5 (str.++ y (str.++ (str.++ c4 c3) (str.++ c2 c1)))) (str.len (str.++ (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7) c6)))) 0 (str.len (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7))) 0 (str.indexof (str.substr (str.substr z 0 (str.indexof z (str.++ c5 (str.++ y (str.++ (str.++ c4 c3) (str.++ c2 c1)))) (str.len (str.++ (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7) c6)))) 0 (str.len (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7))) c7 (str.len (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8)))) c8 (str.len (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9))))) (str.++ c10 c9) (str.len (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11))))) c14 "") c11 (str.len (str.++ c13 (str.++ x c12))))) (str.len c13) (str.len (str.++ x c12))) 0 (str.len x))))
(assert (= y (str.substr (str.substr (str.substr z (str.indexof z (str.++ c5 (str.++ y (str.++ (str.++ c4 c3) (str.++ c2 c1)))) (str.len (str.++ (str.++ (str.++ (str.++ (str.++ c14 (str.++ (str.++ c13 (str.++ x c12)) c11)) (str.++ c10 c9)) c8) c7) c6))) (str.len (str.++ c5 (str.++ y (str.++ (str.++ c4 c3) (str.++ c2 c1)))))) (str.len c5) (str.len (str.++ y (str.++ (str.++ c4 c3) (str.++ c2 c1))))) 0 (str.len y))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(declare-const c12 Real)
(declare-const c13 Real)
(declare-const c14 Real)
(assert (= z (- (* (- (- (* (- c14 (- (+ (- (+ (- c13 c12) c11) (+ (+ x y) (* c10 (+ c9 c8)))) c7) c6)) c5) c4) c3) c2) c1)))
(assert (= x (- (- (- (+ (- c13 c12) c11) (- (+ (- c14 (/ (+ (+ (/ (+ z c1) c2) c3) c4) c5)) c6) c7)) (* c10 (+ c9 c8))) y)))
(assert (= y (- (- (- (+ (- c13 c12) c11) (- (+ (- c14 (/ (+ (+ (/ (+ z c1) c2) c3) c4) c5)) c6) c7)) (* c10 (+ c9 c8))) x)))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(declare-const c12 Real)
(declare-const c13 Real)
(declare-const c14 Real)
(assert (= z (- (* (+ (+ (- c14 (+ x (* c13 (- (* (+ (* (- (* (- (+ c12 c11) c10) c9) c8) c7) c6) c5) c4)))) y) c3) c2) c1)))
(assert (= x (- (- c14 (- (- (/ (+ z c1) c2) c3) y)) (* c13 (- (* (+ (* (- (* (- (+ c12 c11) c10) c9) c8) c7) c6) c5) c4)))))
(assert (= y (- (- (/ (+ z c1) c2) c3) (- c14 (+ x (* c13 (- (* (+ (* (- (* (- (+ c12 c11) c10) c9) c8) c7) c6) c5) c4)))))))
#end

#begin
(declare-const x Real)
(declare-const y Real)
(declare-const z Real)
(declare-const c1 Real)
(declare-const c2 Real)
(declare-const c3 Real)
(declare-const c4 Real)
(declare-const c5 Real)
(declare-const c6 Real)
(declare-const c7 Real)
(declare-const c8 Real)
(declare-const c9 Real)
(declare-const c10 Real)
(declare-const c11 Real)
(declare-const c12 Real)
(declare-const c13 Real)
(declare-const c14 Real)
(assert (= z (+ (+ (- (+ c14 (+ (+ c13 c12) (+ (- (- (- (* (+ (- c11 (- c10 c9)) (* c8 c7)) c6) c5) x) c4) c3))) y) c2) c1)))
(assert (= x (- (- (* (+ (- c11 (- c10 c9)) (* c8 c7)) c6) c5) (+ (- (- (- (+ (- (- z c1) c2) y) c14) (+ c13 c12)) c3) c4))))
(assert (= y (- (+ c14 (+ (+ c13 c12) (+ (- (- (- (* (+ (- c11 (- c10 c9)) (* c8 c7)) c6) c5) x) c4) c3))) (- (- z c1) c2))))
#end

#begin
(declare-const x Bool)
(declare-const y Bool)
(declare-const z Bool)
(declare-const c1 Bool)
(declare-const c2 Bool)
(declare-const c3 Bool)
(declare-const c4 Bool)
(declare-const c5 Bool)
(declare-const c6 Bool)
(declare-const c7 Bool)
(declare-const c8 Bool)
(declare-const c9 Bool)
(assert (= z (not (xor (xor (not (xor (xor c9 c8) (not c7))) c6) (xor (not (not (xor x (not c5)))) (not (xor y (xor c4 (xor (not c3) (xor c2 (not c1)))))))))))
(assert (= x (xor (not c5) (not (not (xor (not (xor y (xor c4 (xor (not c3) (xor c2 (not c1)))))) (xor (xor (not (xor (xor c9 c8) (not c7))) c6) (not z))))))))
(assert (= y (xor (xor c4 (xor (not c3) (xor c2 (not c1)))) (not (xor (not (not (xor x (not c5)))) (xor (xor (not (xor (xor c9 c8) (not c7))) c6) (not z)))))))
#end

#begin
(declare-const x Int)
(declare-const y Int)
(declare-const z Int)
(declare-const c1 Int)
(declare-const c2 Int)
(declare-const c3 Int)
(declare-const c4 Int)
(declare-const c5 Int)
(declare-const c6 Int)
(declare-const c7 Int)
(declare-const c8 Int)
(declare-const c9 Int)
(declare-const c10 Int)
(declare-const c11 Int)
(declare-const c12 Int)
(declare-const c13 Int)
(declare-const c14 Int)
(assert (= z (* (+ (- (+ (* (+ c14 (- x c13)) (+ (+ y (- (+ (* (- c12 (+ (* c11 c10) c9)) c8) c7) c6)) c5)) c4) c3) c2) c1)))
(assert (= x (+ (- (div (- (+ (- (div z c1) c2) c3) c4) (+ (+ y (- (+ (* (- c12 (+ (* c11 c10) c9)) c8) c7) c6)) c5)) c14) c13)))
(assert (= y (- (- (div (- (+ (- (div z c1) c2) c3) c4) (+ c14 (- x c13))) c5) (- (+ (* (- c12 (+ (* c11 c10) c9)) c8) c7) c6))))
#end

